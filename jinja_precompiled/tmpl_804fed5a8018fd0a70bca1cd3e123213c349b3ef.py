from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/admin/AdminRouterService.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Service to maintain the routing state of the admin page,\n * provide routing functionality, and store all available tab states.\n */\n\noppia.constant(\'ADMIN_TAB_URLS\', {\n  ACTIVITIES: \'#activities\',\n  JOBS: \'#jobs\',\n  CONFIG: \'#config\',\n  ROLES: \'#roles\',\n  MISC: \'#misc\'\n});\n\noppia.factory(\'AdminRouterService\', [\n  \'ADMIN_TAB_URLS\',\n  function(ADMIN_TAB_URLS) {\n    var currentTabHash = ADMIN_TAB_URLS.ACTIVITIES;\n\n    var getTabNameByHash = function(tabHash) {\n      for (var tabName in ADMIN_TAB_URLS) {\n        if (ADMIN_TAB_URLS[tabName] === tabHash) {\n          return tabName;\n        }\n      }\n      return null;\n    };\n\n    return {\n      /**\n       * Navigates the page to the specified tab based on its HTML hash.\n       */\n      showTab: function(tabHash) {\n        if (getTabNameByHash(tabHash)) {\n          currentTabHash = tabHash;\n        }\n      },\n\n      /**\n       * Returns whether the activities tab is open.\n       */\n      isActivitiesTabOpen: function() {\n        return currentTabHash === ADMIN_TAB_URLS.ACTIVITIES;\n      },\n\n      /**\n       * Returns whether the jobs tab is open.\n       */\n      isJobsTabOpen: function() {\n        return currentTabHash === ADMIN_TAB_URLS.JOBS;\n      },\n\n      /**\n       * Returns whether the config tab is open.\n       */\n      isConfigTabOpen: function() {\n        return currentTabHash === ADMIN_TAB_URLS.CONFIG;\n      },\n\n      /**\n       * Returns whether the roles tab is open.\n       */\n      isRolesTabOpen: function() {\n        return currentTabHash === ADMIN_TAB_URLS.ROLES;\n      },\n\n      /**\n       * Returns whether the miscellaneous tab is open.\n       */\n      isMiscTabOpen: function() {\n        return currentTabHash === ADMIN_TAB_URLS.MISC;\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''