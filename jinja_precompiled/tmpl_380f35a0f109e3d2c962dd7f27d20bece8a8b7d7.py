from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/rule_editor_directive.html'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'<div style="position: relative;">\n  <form class="form-inline protractor-test-rule-details" role="form" name="ruleEditForm.form">\n    <div ng-if="rule.type != \'FuzzyMatches\'">\n      <rule-type-selector class="protractor-test-answer-description" local-value="<[rule.type]>" on-selection-change="onSelectNewRuleType">\n      </rule-type-selector>\n\n      <span ng-repeat="item in ruleDescriptionFragments track by $index" class="form-group protractor-test-answer-description-fragment" style="margin-right: 5px; width: 100%;">\n        <span ng-if="item.type == \'select\'" style="color: black;">\n          <span ng-if="ruleDescriptionChoices.length === 1">\n            "<[ruleDescriptionChoices[0].val|convertToPlainText|truncate]>"\n          </span>\n          <span ng-if="ruleDescriptionChoices.length !== 1">\n            <html-select style="width: 250px;" options="ruleDescriptionChoices" selection="rule.inputs[item.varName]">\n            </html-select>\n          </span>\n        </span>\n\n        <span ng-if="item.type == \'checkboxes\'" style="color: black;">\n          <object-editor obj-type="SetOfHtmlString" init-args="{choices: ruleDescriptionChoices}" value="rule.inputs[item.varName]"></object-editor>\n        </span>\n        <span ng-if="item.type == \'dropdown\'" style="color: black;">\n          <object-editor obj-type="ListOfSetsOfHtmlStrings" init-args="{choices: ruleDescriptionChoices}" value="rule.inputs[item.varName]"></object-editor>\n        </span>\n        <span ng-if="item.type == \'dragAndDropHtmlStringSelect\'" style="color: black;">\n          <object-editor obj-type="DragAndDropHtmlString" init-args="{choices: ruleDescriptionChoices}" value="rule.inputs[item.varName]"></object-editor>\n        </span>\n        <span ng-if="item.type == \'dragAndDropPositiveIntSelect\'" style="color: black;">\n          <object-editor obj-type="DragAndDropPositiveInt" init-args="{choices: ruleDescriptionChoices}" value="rule.inputs[item.varName]"></object-editor>\n        </span>\n        <span ng-if="item.type != \'select\' && item.type != \'noneditable\'">\n          <object-editor obj-type="<[item.type]>" is-editable="isEditable" always-editable="true" value="rule.inputs[item.varName]" style="color: black;"></object-editor>\n        </span>\n        <span ng-if="item.type == \'noneditable\'">\n          <[item.text]>\n        </span>\n      </span>\n    </div>\n  </form>\n\n  <div class="oppia-rule-save-cancel-buttons" ng-if="isEditingRuleInline()">\n    <div class="pull-right">\n      <button type="button" class="btn btn-default" ng-click="cancelThisEdit()">Cancel</button>\n      <button type="button" class="btn btn-success protractor-test-save-answer" ng-disabled="ruleEditForm.form.$invalid" ng-click="saveThisRule()">Save Answer</button>\n    </div>\n\n    <div style="clear: both;"></div>\n  </div>\n</div>'

blocks = {}
debug_info = ''