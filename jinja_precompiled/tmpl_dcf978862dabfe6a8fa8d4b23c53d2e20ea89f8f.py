from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_player/ExplorationFooterDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for showing author/share footer\n * in exploration player.\n */\n\noppia.directive(\'explorationFooter\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        twitterText: \'@\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/exploration_player/exploration_footer_directive.html\'),\n      controller: [\n        \'$scope\', \'$http\', \'$log\', \'ContextService\',\n        \'ExplorationSummaryBackendApiService\', \'WindowDimensionsService\',\n        function(\n            $scope, $http, $log, ContextService,\n            ExplorationSummaryBackendApiService, WindowDimensionsService) {\n          $scope.explorationId = ContextService.getExplorationId();\n\n          $scope.getStaticImageUrl = UrlInterpolationService.getStaticImageUrl;\n\n          $scope.windowIsNarrow = WindowDimensionsService.isWindowNarrow();\n          WindowDimensionsService.registerOnResizeHook(function() {\n            $scope.windowIsNarrow = WindowDimensionsService.isWindowNarrow();\n            $scope.$apply();\n          });\n\n          $scope.contributorNames = [];\n          ExplorationSummaryBackendApiService\n            .loadPublicAndPrivateExplorationSummaries([$scope.explorationId])\n            .then(function(summaries) {\n              var summaryBackendObject = null;\n              if (summaries.length > 0) {\n                var contributorSummary = (\n                  summaries[0].human_readable_contributors_summary);\n                $scope.contributorNames = Object.keys(contributorSummary).sort(\n                  function(contributorUsername1, contributorUsername2) {\n                    var commitsOfContributor1 = contributorSummary[\n                      contributorUsername1].num_commits;\n                    var commitsOfContributor2 = contributorSummary[\n                      contributorUsername2].num_commits;\n                    return commitsOfContributor2 - commitsOfContributor1;\n                  });\n              }\n            });\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''