from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_editor/StateEditorTutorialFirstTimeService.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Service for the state editor tutorial.\n */\n\noppia.factory(\'StateEditorTutorialFirstTimeService\', [\n  \'$http\', \'$rootScope\', \'EditorFirstTimeEventsService\',\n  function($http, $rootScope, EditorFirstTimeEventsService) {\n    // Whether this is the first time the tutorial has been seen by this user.\n    var _currentlyInFirstVisit = true;\n\n    var STARTED_TUTORIAL_EVENT_URL = \'/createhandler/started_tutorial_event\';\n\n    return {\n      // After the first call to it in a client session, this does nothing.\n      init: function(firstTime, expId) {\n        if (!firstTime || !_currentlyInFirstVisit) {\n          _currentlyInFirstVisit = false;\n        }\n\n        if (_currentlyInFirstVisit) {\n          $rootScope.$broadcast(\'enterEditorForTheFirstTime\');\n          EditorFirstTimeEventsService.initRegisterEvents(expId);\n          $http.post(STARTED_TUTORIAL_EVENT_URL + \'/\' + expId).error(\n            function() {\n              console.error(\'Warning: could not record tutorial start event.\');\n            });\n        }\n      },\n      markTutorialFinished: function() {\n        if (_currentlyInFirstVisit) {\n          $rootScope.$broadcast(\'openPostTutorialHelpPopover\');\n          EditorFirstTimeEventsService.registerEditorFirstEntryEvent();\n        }\n\n        _currentlyInFirstVisit = false;\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''