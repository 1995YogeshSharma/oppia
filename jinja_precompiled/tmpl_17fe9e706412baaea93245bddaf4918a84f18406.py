from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/skill_editor/editor_tab/SkillConceptCardEditorDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the concept card editor.\n */\n\noppia.directive(\'skillConceptCardEditor\', [\n  \'UrlInterpolationService\', \'SkillUpdateService\', \'SkillEditorStateService\',\n  function(\n      UrlInterpolationService, SkillUpdateService, SkillEditorStateService) {\n    return {\n      restrict: \'E\',\n      scope: {},\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/skill_editor/editor_tab/\' +\n        \'skill_concept_card_editor_directive.html\'),\n      controller: [\n        \'$scope\', \'$filter\', \'$uibModal\',\n        function($scope, $filter, $uibModal) {\n          $scope.skill = SkillEditorStateService.getSkill();\n          $scope.dragDotsImgUrl = UrlInterpolationService.getStaticImageUrl(\n            \'/general/drag_dots.png\');\n          $scope.HTML_SCHEMA = {\n            type: \'html\'\n          };\n          $scope.bindableFieldsDict = {\n            displayedConceptCardExplanation:\n              $scope.skill.getConceptCard().getExplanation(),\n            displayedWorkedExamples:\n              $scope.skill.getConceptCard().getWorkedExamples()\n          };\n          var explanationMemento = null;\n          var workedExamplesMemento = null;\n\n          $scope.isEditable = function() {\n            return true;\n          };\n\n          // When the page is scrolled so that the top of the page is above the\n          // browser viewport, there are some bugs in the positioning of the\n          // helper. This is a bug in jQueryUI that has not been fixed yet.\n          // For more details, see http://stackoverflow.com/q/5791886\n          $scope.WORKED_EXAMPLES_SORTABLE_OPTIONS = {\n            axis: \'y\',\n            cursor: \'move\',\n            handle: \'.oppia-worked-example-sort-handle\',\n            items: \'.oppia-sortable-worked-example\',\n            revert: 100,\n            tolerance: \'pointer\',\n            start: function(e, ui) {\n              $scope.activeWorkedExampleIndex = null;\n              ui.placeholder.height(ui.item.height());\n            },\n            stop: function() {\n              var newWorkedExamples =\n                $scope.bindableFieldsDict.displayedWorkedExamples;\n              SkillUpdateService.updateWorkedExamples(\n                $scope.skill, newWorkedExamples);\n            }\n          };\n\n          $scope.changeActiveWorkedExampleIndex = function(idx) {\n            if (idx === $scope.activeWorkedExampleIndex) {\n              $scope.activeWorkedExampleIndex = null;\n            } else {\n              $scope.activeWorkedExampleIndex = idx;\n            }\n          };\n\n          $scope.conceptCardExplanationEditorIsShown = false;\n\n          $scope.openConceptCardExplanationEditor = function() {\n            $scope.conceptCardExplanationEditorIsShown = true;\n            explanationMemento =\n              $scope.bindableFieldsDict.displayedConceptCardExplanation;\n          };\n\n          $scope.closeConceptCardExplanationEditor = function() {\n            $scope.conceptCardExplanationEditorIsShown = false;\n            $scope.bindableFieldsDict.displayedConceptCardExplanation =\n              explanationMemento;\n          };\n\n          $scope.saveConceptCardExplanation = function() {\n            $scope.conceptCardExplanationEditorIsShown = false;\n            SkillUpdateService.setConceptCardExplanation(\n              $scope.skill,\n              $scope.bindableFieldsDict.displayedConceptCardExplanation);\n            explanationMemento = null;\n            $scope.displayedConceptCardExplanation =\n              $scope.skill.getConceptCard().getExplanation();\n          };\n\n          $scope.deleteWorkedExample = function(index, evt) {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/skill_editor/editor_tab/\' +\n                \'delete_worked_example_modal_directive.html\'),\n              backdrop: \'static\',\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.confirm = function() {\n                    $uibModalInstance.close();\n                  };\n\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }]\n            }).result.then(function(result) {\n              SkillUpdateService.deleteWorkedExample($scope.skill, index);\n              $scope.bindableFieldsDict.displayedWorkedExamples =\n                $scope.skill.getConceptCard().getWorkedExamples();\n              $scope.activeWorkedExampleIndex = null;\n            });\n          };\n\n          $scope.getWorkedExampleSummary = function(workedExample) {\n            return $filter(\'formatRtePreview\')(workedExample);\n          };\n\n          $scope.openAddWorkedExampleModal = function() {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/skill_editor/editor_tab/\' +\n                \'add_worked_example_modal_directive.html\'),\n              backdrop: \'static\',\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.WORKED_EXAMPLE_FORM_SCHEMA = {\n                    type: \'html\',\n                    ui_config: {}\n                  };\n\n                  $scope.tmpWorkedExampleHtml = \'\';\n                  $scope.saveWorkedExample = function() {\n                    $uibModalInstance.close({\n                      workedExample: $scope.tmpWorkedExampleHtml\n                    });\n                  };\n\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }\n              ]\n            }).result.then(function(result) {\n              SkillUpdateService.addWorkedExample(\n                $scope.skill, result.workedExample);\n              $scope.bindableFieldsDict.displayedWorkedExamples =\n                $scope.skill.getConceptCard().getWorkedExamples();\n            });\n          };\n\n          $scope.onWorkedExampleSaved = function() {\n            $scope.bindableFieldsDict.displayedWorkedExamples =\n              $scope.skill.getConceptCard().getWorkedExamples();\n          };\n        }\n      ]\n    };\n  }\n]);'

blocks = {}
debug_info = ''