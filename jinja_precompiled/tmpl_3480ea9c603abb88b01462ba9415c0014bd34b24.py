from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'services/RteHelperServiceSpec.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview unit tests for the Rich-text-editor Service.\n */\n\ndescribe(\'RteHelperService\', function() {\n  beforeEach(module(\'oppia\'));\n  beforeEach(inject(function($injector) {\n    RteHelperService = $injector.get(\'RteHelperService\');\n  }));\n\n  it(\'should return text with no extra new lines or spaces\', function () {\n    var testData = [[\n      \'<p>abc</p>\', \'<p>abc</p>\'\n    ], [\n      \'<p>abc</p><p><br></p><p>abc</p>\', \'<p>abc</p><p><br></p><p>abc</p>\'\n    ], [\n      \'<p>abc</p><p><br></p><p>abc</p><p><br></p>\',\n      \'<p>abc</p><p><br></p><p>abc</p>\'\n    ], [\n      \'<p>abc</p><p><br></p><p>abc</p><p><br></p><p><br></p>\',\n      \'<p>abc</p><p><br></p><p>abc</p>\'\n    ], [\n      \'<p>abc</p><p><br><br></p>\', \'<p>abc</p>\'\n    ], [\n      \'<p>abc</p><p>abc<br></p>\', \'<p>abc</p><p>abc</p>\'\n    ], [\n      \'<p>abc</p><br><br>\', \'<p>abc</p>\'\n    ], [\n      \'<p>abc<br>abc<br></p>\', \'<p>abc<br>abc</p>\'\n    ], [\n      \'<p><p></p></p>\', \'\'\n    ], [\n      \'<p>abc<p></p></p>\', \'<p>abc</p>\'\n    ], [\n      \'<p>abc<p><br></p></p>\', \'<p>abc</p>\'\n    ], [\n      \'<p>abc<p><p><br></p></p></p>\', \'<p>abc</p>\'\n    ]];\n    for (var i = 0; i < testData.length; i++) {\n      expect(RteHelperService.convertRteToHtml(testData[i][0]))\n        .toEqual(testData[i][1]);\n    }\n  });\n});'

blocks = {}
debug_info = ''