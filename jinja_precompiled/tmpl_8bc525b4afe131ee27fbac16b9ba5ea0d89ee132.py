from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/email_dashboard/EmailDashboardResult.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for oppia email dashboard page.\n */\n\noppia.controller(\'EmailDashboardResult\', [\n  \'$scope\', \'$http\', \'$window\', \'$timeout\', \'UrlInterpolationService\',\n  function($scope, $http, $window, $timeout, UrlInterpolationService) {\n    var RESULT_HANDLER_URL = \'/emaildashboardresult/<query_id>\';\n    var CANCEL_EMAIL_HANDLER_URL = \'/emaildashboardcancelresult/<query_id>\';\n    var EMAIL_DASHBOARD_PAGE = \'/emaildashboard\';\n    var TEST_BULK_EMAIL_URL = \'/emaildashboardtestbulkemailhandler/<query_id>\';\n\n    var getQueryId = function() {\n      return $window.location.pathname.split(\'/\').slice(-1)[0];\n    };\n\n    var validateEmailSubjectAndBody = function() {\n      var dataIsValid = true;\n      if ($scope.emailSubject.length === 0) {\n        $scope.invalid.subject = true;\n        dataIsValid = false;\n      }\n      if ($scope.emailBody.length === 0) {\n        $scope.invalid.body = true;\n        dataIsValid = false;\n      }\n      return dataIsValid;\n    };\n\n    $scope.submitEmail = function() {\n      var resultHandlerUrl = UrlInterpolationService.interpolateUrl(\n        RESULT_HANDLER_URL, {\n          query_id: getQueryId()\n        });\n      var dataIsValid = validateEmailSubjectAndBody();\n\n      if ($scope.emailOption === \'custom\' &&\n        $scope.maxRecipients === null) {\n        $scope.invalid.maxRecipients = true;\n        dataIsValid = false;\n      }\n\n      if (dataIsValid) {\n        $scope.submitIsInProgress = true;\n        var data = {\n          email_subject: $scope.emailSubject,\n          email_body: $scope.emailBody,\n          email_intent: $scope.emailIntent,\n          max_recipients: (\n            $scope.emailOption !== \'all\' ? $scope.max_recipients : null)\n        };\n\n        $http.post(resultHandlerUrl, {\n          data: data\n        }).success(function() {\n          $scope.emailSubmitted = true;\n          $timeout(function() {\n            $window.location.href = EMAIL_DASHBOARD_PAGE;\n          }, 4000);\n        }).error(function() {\n          $scope.errorHasOccurred = true;\n          $scope.submitIsInProgress = false;\n        });\n        $scope.invalid.subject = false;\n        $scope.invalid.body = false;\n        $scope.invalid.maxRecipients = false;\n      }\n    };\n\n    $scope.resetForm = function() {\n      $scope.emailSubject = \'\';\n      $scope.emailBody = \'\';\n      $scope.emailOption = \'all\';\n    };\n\n    $scope.cancelEmail = function() {\n      $scope.submitIsInProgress = true;\n      var cancelUrlHandler = UrlInterpolationService.interpolateUrl(\n        CANCEL_EMAIL_HANDLER_URL, {\n          query_id: getQueryId()\n        });\n\n      $http.post(cancelUrlHandler).success(function() {\n        $scope.emailCancelled = true;\n        $timeout(function() {\n          $window.location.href = EMAIL_DASHBOARD_PAGE;\n        }, 4000);\n      }).error(function() {\n        $scope.errorHasOccurred = true;\n        $scope.submitIsInProgress = false;\n      });\n    };\n\n    $scope.sendTestEmail = function() {\n      var testEmailHandlerUrl = UrlInterpolationService.interpolateUrl(\n        TEST_BULK_EMAIL_URL, {\n          query_id: getQueryId()\n        });\n      var dataIsValid = validateEmailSubjectAndBody();\n\n      if (dataIsValid) {\n        $http.post(testEmailHandlerUrl, {\n          email_subject: $scope.emailSubject,\n          email_body: $scope.emailBody\n        }).success(function() {\n          $scope.testEmailSentSuccesfully = true;\n        });\n        $scope.invalid.subject = false;\n        $scope.invalid.body = false;\n        $scope.invalid.maxRecipients = false;\n      }\n    };\n\n    $scope.emailOption = \'all\';\n    $scope.emailSubject = \'\';\n    $scope.emailBody = \'\';\n    $scope.invalid = {\n      subject: false,\n      body: false,\n      maxRecipients: false\n    };\n    $scope.maxRecipients = null;\n    $scope.POSSIBLE_EMAIL_INTENTS = [\n      \'bulk_email_marketing\', \'bulk_email_improve_exploration\',\n      \'bulk_email_create_exploration\', \'bulk_email_creator_reengagement\',\n      \'bulk_email_learner_reengagement\'];\n    $scope.emailIntent = $scope.POSSIBLE_EMAIL_INTENTS[0];\n    $scope.emailSubmitted = false;\n    $scope.submitIsInProgress = false;\n    $scope.errorHasOccurred = false;\n    $scope.testEmailSentSuccesfully = false;\n  }\n]);'

blocks = {}
debug_info = ''