from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_editor/editor_tab/TestInteractionPanelDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the test interaction panel in the state editor.\n */\noppia.directive(\'testInteractionPanel\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        getStateName: \'&stateName\',\n        getInputTemplate: \'&inputTemplate\',\n        onSubmitAnswer: \'&\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/exploration_editor/editor_tab/\' +\n        \'test_interaction_modal_directive.html\'),\n      controller: [\n        \'$scope\', \'ExplorationStatesService\',\n        \'INTERACTION_SPECS\', \'INTERACTION_DISPLAY_MODE_INLINE\',\n        \'EVENT_PROGRESS_NAV_SUBMITTED\',\n        function($scope, ExplorationStatesService,\n            INTERACTION_SPECS, INTERACTION_DISPLAY_MODE_INLINE,\n            EVENT_PROGRESS_NAV_SUBMITTED) {\n          var _stateName = $scope.getStateName();\n          var _state = ExplorationStatesService.getState(_stateName);\n          $scope.interactionIsInline = (\n            INTERACTION_SPECS[_state.interaction.id].display_mode ===\n            INTERACTION_DISPLAY_MODE_INLINE);\n          $scope.interactionAnswerIsValid = true;\n          $scope.submitAnswer = function(answer) {\n            $scope.onSubmitAnswer({\n              answer: answer\n            });\n          };\n\n          $scope.onSubmitAnswerFromButton = function() {\n            $scope.$broadcast(EVENT_PROGRESS_NAV_SUBMITTED);\n          };\n\n          $scope.setInteractionAnswerValidity = function(answerValidity) {\n            $scope.interactionAnswerIsValid = answerValidity;\n          };\n        }\n      ]\n    };\n  }\n]);'

blocks = {}
debug_info = ''