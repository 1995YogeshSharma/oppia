from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_editor/ExplorationSaveAndPublishButtonsDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the exploration save & publish buttons.\n */\noppia.directive(\'explorationSaveAndPublishButtons\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/exploration_editor/\' +\n        \'exploration_save_and_publish_buttons_directive.html\'),\n      controller: [\n        \'$scope\', \'ChangeListService\', \'EditabilityService\',\n        \'ExplorationRightsService\', \'ExplorationWarningsService\',\n        \'ExplorationSaveService\',\n        function(\n            $scope, ChangeListService, EditabilityService,\n            ExplorationRightsService, ExplorationWarningsService,\n            ExplorationSaveService) {\n          $scope.saveIsInProcess = false;\n          $scope.publishIsInProcess = false;\n          $scope.loadingDotsAreShown = false;\n\n          $scope.showPublishButton = function() {\n            return GLOBALS.can_publish && ExplorationRightsService.isPrivate();\n          };\n\n          $scope.isPrivate = function() {\n            return ExplorationRightsService.isPrivate();\n          };\n\n          $scope.isExplorationLockedForEditing = function() {\n            return ChangeListService.isExplorationLockedForEditing();\n          };\n\n          $scope.isEditableOutsideTutorialMode = function() {\n            return EditabilityService.isEditableOutsideTutorialMode() ||\n              EditabilityService.isTranslatable();\n          };\n\n          $scope.countWarnings = function() {\n            return ExplorationWarningsService.countWarnings();\n          };\n\n          $scope.discardChanges = function() {\n            ExplorationSaveService.discardChanges();\n          };\n\n          $scope.getChangeListLength = function() {\n            return ChangeListService.getChangeList().length;\n          };\n\n          $scope.isExplorationSaveable = function() {\n            return ExplorationSaveService.isExplorationSaveable();\n          };\n\n          $scope.getPublishExplorationButtonTooltip = function() {\n            if (ExplorationWarningsService.countWarnings() > 0) {\n              return \'Please resolve the warnings before publishing.\';\n            } else if (ChangeListService.isExplorationLockedForEditing()) {\n              return \'Please save your changes before publishing.\';\n            } else {\n              return \'Publish to Oppia Library\';\n            }\n          };\n\n          $scope.getSaveButtonTooltip = function() {\n            if (ExplorationWarningsService.hasCriticalWarnings() > 0) {\n              return \'Please resolve the warnings.\';\n            } else if (ExplorationRightsService.isPrivate()) {\n              return \'Save Draft\';\n            } else {\n              return \'Publish Changes\';\n            }\n          };\n\n          showLoadingDots = function() {\n            $scope.loadingDotsAreShown = true;\n          };\n\n          hideLoadingDots = function() {\n            $scope.loadingDotsAreShown = false;\n          };\n\n          $scope.showPublishExplorationModal = function() {\n            $scope.publishIsInProcess = true;\n            $scope.loadingDotsAreShown = true;\n\n            ExplorationSaveService.showPublishExplorationModal(\n              showLoadingDots, hideLoadingDots)\n              .then(function() {\n                $scope.publishIsInProcess = false;\n                $scope.loadingDotsAreShown = false;\n              });\n          };\n\n          $scope.saveChanges = function() {\n            $scope.saveIsInProcess = true;\n            $scope.loadingDotsAreShown = true;\n\n            ExplorationSaveService.saveChanges(showLoadingDots, hideLoadingDots)\n              .then(function() {\n                $scope.saveIsInProcess = false;\n                $scope.loadingDotsAreShown = false;\n              });\n          };\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''