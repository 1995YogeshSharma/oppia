from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'services/LocalStorageServiceSpec.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2017 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview unit tests for the local save services.\n */\n\ndescribe(\'LocalStorageService\', function() {\n  beforeEach(module(\'oppia\'));\n\n  describe(\'behavior in editor\', function() {\n    var LocalStorageService = null;\n    var explorationIdOne = \'100\';\n    var draftChangeListIdOne = 2;\n    var changeList = [];\n    var explorationIdTwo = \'101\';\n    var draftChangeListIdTwo = 1;\n    var draftDictOne = {\n      draftChanges: changeList,\n      draftChangeListId: draftChangeListIdOne\n    };\n    var draftDictTwo = {\n      draftChanges: changeList,\n      draftChangeListId: draftChangeListIdTwo\n    };\n    var draftOne = null;\n    var draftTwo = null;\n\n    beforeEach(inject(function($injector) {\n      LocalStorageService = $injector.get(\'LocalStorageService\');\n      ExplorationDraftObjectFactory = $injector.get(\n        \'ExplorationDraftObjectFactory\');\n      draftOne = ExplorationDraftObjectFactory.createFromLocalStorageDict(\n        draftDictOne);\n      draftTwo = ExplorationDraftObjectFactory.createFromLocalStorageDict(\n        draftDictTwo);\n    }));\n\n    it(\'should correctly save the draft\', function() {\n      LocalStorageService.saveExplorationDraft(explorationIdOne,\n        changeList, draftChangeListIdOne);\n      LocalStorageService.saveExplorationDraft(explorationIdTwo,\n        changeList, draftChangeListIdTwo);\n      expect(LocalStorageService.getExplorationDraft(\n        explorationIdOne)).toEqual(draftOne);\n      expect(LocalStorageService.getExplorationDraft(\n        explorationIdTwo)).toEqual(draftTwo);\n    });\n\n    it(\'should correctly remove the draft\', function() {\n      LocalStorageService.saveExplorationDraft(explorationIdTwo,\n        changeList, draftChangeListIdTwo);\n      LocalStorageService.removeExplorationDraft(explorationIdTwo);\n      expect(LocalStorageService.getExplorationDraft(\n        explorationIdTwo)).toBeNull();\n    });\n  });\n});'

blocks = {}
debug_info = ''