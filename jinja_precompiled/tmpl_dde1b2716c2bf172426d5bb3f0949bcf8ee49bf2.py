from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/skill_editor/editor_tab/WorkedExampleEditorDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the worked example editor.\n */\n\noppia.directive(\'workedExampleEditor\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        workedExample: \'=\',\n        getIndex: \'&index\',\n        isEditable: \'&isEditable\',\n        getOnSaveFn: \'&onSave\',\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/skill_editor/editor_tab/worked_example_editor_directive.html\'),\n      controller: [\n        \'$scope\', \'SkillUpdateService\', \'SkillEditorStateService\',\n        function($scope, SkillUpdateService, SkillEditorStateService) {\n          $scope.editorIsOpen = false;\n          $scope.container = {\n            workedExample: $scope.workedExample\n          };\n\n          $scope.WORKED_EXAMPLE_FORM_SCHEMA = {\n            type: \'html\',\n            ui_config: {}\n          };\n\n          $scope.openEditor = function() {\n            if ($scope.isEditable()) {\n              $scope.workedExampleMemento =\n                angular.copy($scope.container.workedExample);\n              $scope.editorIsOpen = true;\n            }\n          };\n\n          $scope.saveWorkedExample = function() {\n            $scope.editorIsOpen = false;\n            var contentHasChanged = (\n              $scope.workedExampleMemento !==\n              $scope.container.workedExample);\n            $scope.workedExampleMemento = null;\n\n            if (contentHasChanged) {\n              SkillUpdateService.updateWorkedExample(\n                SkillEditorStateService.getSkill(),\n                $scope.getIndex(),\n                $scope.container.workedExample);\n              $scope.getOnSaveFn()();\n            }\n          };\n\n          $scope.cancelEdit = function() {\n            $scope.container.workedExample = angular.copy(\n              $scope.workedExampleMemento);\n            $scope.workedExampleMemento = null;\n            $scope.editorIsOpen = false;\n          };\n        }]\n    };\n  }\n]);'

blocks = {}
debug_info = ''