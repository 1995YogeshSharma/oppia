from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/topic_editor/subtopics_editor/SubtopicsListTabDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for the subtopics list editor.\n */\n\noppia.directive(\'subtopicsListTab\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {},\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/topic_editor/subtopics_editor/\' +\n        \'subtopics_list_tab_directive.html\'),\n      controller: [\n        \'$scope\', \'$uibModal\', \'TopicEditorStateService\', \'TopicUpdateService\',\n        \'UndoRedoService\', \'SubtopicPageObjectFactory\',\n        \'UrlInterpolationService\', \'EVENT_TOPIC_REINITIALIZED\',\n        \'EVENT_TOPIC_INITIALIZED\', \'EVENT_SUBTOPIC_PAGE_LOADED\',\n        function(\n            $scope, $uibModal, TopicEditorStateService, TopicUpdateService,\n            UndoRedoService, SubtopicPageObjectFactory,\n            UrlInterpolationService, EVENT_TOPIC_REINITIALIZED,\n            EVENT_TOPIC_INITIALIZED, EVENT_SUBTOPIC_PAGE_LOADED) {\n          var SKILL_EDITOR_URL_TEMPLATE = \'/skill_editor/<skillId>\';\n          var _initEditor = function() {\n            $scope.topic = TopicEditorStateService.getTopic();\n            $scope.subtopics = $scope.topic.getSubtopics();\n            $scope.subtopicEditorIsShown = false;\n            $scope.uncategorizedSkillSummaries =\n              $scope.topic.getUncategorizedSkillSummaries();\n          };\n\n          $scope.editSubtopic = function(subtopic) {\n            var editableTitle = subtopic.getTitle();\n            TopicEditorStateService.loadSubtopicPage(\n              $scope.topic.getId(), subtopic.getId());\n            var modalInstance = $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/topic_editor/subtopics_editor/\' +\n                \'subtopic_editor_modal_directive.html\'),\n              backdrop: true,\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.subtopicId = subtopic.getId();\n                  $scope.editableTitle = editableTitle;\n                  $scope.subtopicPage =\n                    TopicEditorStateService.getSubtopicPage();\n                  $scope.htmlData = $scope.subtopicPage.getHtmlData();\n                  $scope.$on(EVENT_SUBTOPIC_PAGE_LOADED, function() {\n                    $scope.subtopicPage =\n                      TopicEditorStateService.getSubtopicPage();\n                    $scope.htmlData = $scope.subtopicPage.getHtmlData();\n                  });\n                  $scope.SUBTOPIC_PAGE_SCHEMA = {\n                    type: \'html\',\n                    ui_config: {\n                      rows: 100\n                    }\n                  };\n\n                  $scope.updateSubtopicTitle = function(title) {\n                    $scope.editableTitle = title;\n                    $scope.closeSubtopicTitleEditor();\n                  };\n\n                  $scope.updateHtmlData = function(htmlData) {\n                    $scope.htmlData = htmlData;\n                    $scope.openPreviewSubtopicPage(htmlData);\n                  };\n\n                  $scope.openSubtopicTitleEditor = function() {\n                    $scope.subtopicTitleEditorIsShown = true;\n                  };\n\n                  $scope.closeSubtopicTitleEditor = function() {\n                    $scope.subtopicTitleEditorIsShown = false;\n                  };\n\n                  $scope.openPreviewSubtopicPage = function(htmlData) {\n                    $scope.subtopicEditorIsShown = false;\n                    $scope.htmlData = htmlData;\n                  };\n\n                  $scope.closePreviewSubtopicPage = function(previewHtmlData) {\n                    $scope.subtopicEditorIsShown = true;\n                    $scope.htmlData = previewHtmlData;\n                  };\n\n                  $scope.save = function() {\n                    $uibModalInstance.close({\n                      newTitle: $scope.editableTitle,\n                      newHtmlData: $scope.htmlData\n                    });\n                  };\n\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }\n              ]\n            });\n\n            modalInstance.result.then(function(newValues) {\n              $scope.subtopicPage = TopicEditorStateService.getSubtopicPage();\n              var newTitle = newValues.newTitle;\n              var newHtmlData = newValues.newHtmlData;\n\n              if (newTitle !== subtopic.getTitle()) {\n                TopicUpdateService.setSubtopicTitle(\n                  $scope.topic, subtopic.getId(), newTitle);\n              }\n              if (newHtmlData !== $scope.subtopicPage.getHtmlData()) {\n                TopicUpdateService.setSubtopicPageHtmlData(\n                  $scope.subtopicPage, subtopic.getId(), newHtmlData);\n                TopicEditorStateService.setSubtopicPage($scope.subtopicPage);\n              }\n            });\n          };\n\n          $scope.isSkillDeleted = function(skillSummary) {\n            return skillSummary.getDescription() === null;\n          };\n\n          $scope.getSkillEditorUrl = function(skillId) {\n            return UrlInterpolationService.interpolateUrl(\n              SKILL_EDITOR_URL_TEMPLATE, {\n                skillId: skillId\n              }\n            );\n          };\n\n          /**\n           * @param {string|null} oldSubtopicId - The id of the subtopic from\n           *    which the skill is to be moved, or null if the origin is the\n           *    uncategorized section.\n           * @param {SkillSummary} skillSummary - The summary of the skill that\n           *    is to be moved.\n           */\n          $scope.startMoveSkill = function(oldSubtopicId, skillSummary) {\n            $scope.skillSummaryToMove = skillSummary;\n            $scope.oldSubtopicId = oldSubtopicId ? oldSubtopicId : null;\n          };\n\n          /**\n           * @param {string|null} newSubtopicId - The subtopic to which the\n           *    skill is to be moved, or null if the destination is the\n           *    uncategorized section.\n           */\n          $scope.endMoveSkill = function(newSubtopicId) {\n            if (newSubtopicId === $scope.oldSubtopicId) {\n              return;\n            }\n\n            if (newSubtopicId === null) {\n              TopicUpdateService.removeSkillFromSubtopic(\n                $scope.topic, $scope.oldSubtopicId, $scope.skillSummaryToMove);\n            } else {\n              TopicUpdateService.moveSkillToSubtopic(\n                $scope.topic, $scope.oldSubtopicId, newSubtopicId,\n                $scope.skillSummaryToMove);\n            }\n            _initEditor();\n          };\n\n          $scope.deleteSubtopic = function(subtopic) {\n            TopicEditorStateService.deleteSubtopicPage(\n              $scope.topic.getId(), subtopic.getId());\n            TopicUpdateService.deleteSubtopic($scope.topic, subtopic.getId());\n            _initEditor();\n          };\n\n          $scope.createSubtopic = function() {\n            var modalInstance = $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/topic_editor/subtopics_editor/\' +\n                \'new_subtopic_title_modal_directive.html\'),\n              backdrop: true,\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.subtopicTitle = \'\';\n                  $scope.isSubtopicTitleEmpty = function(subtopicTitle) {\n                    return (subtopicTitle === \'\');\n                  };\n                  $scope.save = function(title) {\n                    $uibModalInstance.close(title);\n                  };\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }\n              ]\n            });\n\n            modalInstance.result.then(function(title) {\n              var subtopicPage = SubtopicPageObjectFactory.createDefault(\n                $scope.topic.getId(), $scope.topic.getNextSubtopicId());\n              TopicEditorStateService.setSubtopicPage(subtopicPage);\n              TopicUpdateService.addSubtopic($scope.topic, title);\n              _initEditor();\n            });\n          };\n\n          $scope.$on(EVENT_TOPIC_INITIALIZED, _initEditor);\n          $scope.$on(EVENT_TOPIC_REINITIALIZED, _initEditor);\n\n          _initEditor();\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''