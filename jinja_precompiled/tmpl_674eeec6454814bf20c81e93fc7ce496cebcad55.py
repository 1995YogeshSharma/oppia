from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/admin/jobs_tab/AdminJobsTabDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the jobs tab in the admin panel.\n */\n\noppia.directive(\'adminJobsTab\', [\n  \'$http\', \'$timeout\', \'UrlInterpolationService\', \'ADMIN_HANDLER_URL\',\n  \'ADMIN_JOB_OUTPUT_URL_TEMPLATE\',\n  function(\n      $http, $timeout, UrlInterpolationService, ADMIN_HANDLER_URL,\n      ADMIN_JOB_OUTPUT_URL_TEMPLATE) {\n    return {\n      restrict: \'E\',\n      scope: {\n        setStatusMessage: \'=\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/admin/jobs_tab/\' +\n        \'admin_jobs_tab_directive.html\'),\n      controller: [\'$scope\', function($scope) {\n        $scope.HUMAN_READABLE_CURRENT_TIME = (\n          GLOBALS.HUMAN_READABLE_CURRENT_TIME);\n        $scope.CONTINUOUS_COMPUTATIONS_DATA = (\n          GLOBALS.CONTINUOUS_COMPUTATIONS_DATA);\n        $scope.ONE_OFF_JOB_SPECS = GLOBALS.ONE_OFF_JOB_SPECS;\n        $scope.UNFINISHED_JOB_DATA = GLOBALS.UNFINISHED_JOB_DATA;\n        $scope.RECENT_JOB_DATA = GLOBALS.RECENT_JOB_DATA;\n\n        $scope.showingJobOutput = false;\n        $scope.showJobOutput = function(jobId) {\n          var adminJobOutputUrl = UrlInterpolationService.interpolateUrl(\n            ADMIN_JOB_OUTPUT_URL_TEMPLATE, {\n              jobId: jobId\n            });\n          $http.get(adminJobOutputUrl).then(function(response) {\n            $scope.showingJobOutput = true;\n            $scope.jobOutput = response.data.output || [];\n            $scope.jobOutput.sort();\n            $timeout(function() {\n              document.querySelector(\'#job-output\').scrollIntoView();\n            });\n          });\n        };\n\n        $scope.startNewJob = function(jobType) {\n          $scope.setStatusMessage(\'Starting new job...\');\n\n          $http.post(ADMIN_HANDLER_URL, {\n            action: \'start_new_job\',\n            job_type: jobType\n          }).then(function() {\n            $scope.setStatusMessage(\'Job started successfully.\');\n            window.location.reload();\n          }, function(errorResponse) {\n            $scope.setStatusMessage(\n              \'Server error: \' + errorResponse.data.error);\n          });\n        };\n\n        $scope.cancelJob = function(jobId, jobType) {\n          $scope.setStatusMessage(\'Cancelling job...\');\n\n          $http.post(ADMIN_HANDLER_URL, {\n            action: \'cancel_job\',\n            job_id: jobId,\n            job_type: jobType\n          }).then(function() {\n            $scope.setStatusMessage(\'Abort signal sent to job.\');\n            window.location.reload();\n          }, function(errorResponse) {\n            $scope.setStatusMessage(\n              \'Server error: \' + errorResponse.data.error);\n          });\n        };\n\n        $scope.startComputation = function(computationType) {\n          $scope.setStatusMessage(\'Starting computation...\');\n\n          $http.post(ADMIN_HANDLER_URL, {\n            action: \'start_computation\',\n            computation_type: computationType\n          }).then(function() {\n            $scope.setStatusMessage(\'Computation started successfully.\');\n            window.location.reload();\n          }, function(errorResponse) {\n            $scope.setStatusMessage(\n              \'Server error: \' + errorResponse.data.error);\n          });\n        };\n\n        $scope.stopComputation = function(computationType) {\n          $scope.setStatusMessage(\'Stopping computation...\');\n\n          $http.post(ADMIN_HANDLER_URL, {\n            action: \'stop_computation\',\n            computation_type: computationType\n          }).then(function() {\n            $scope.setStatusMessage(\'Abort signal sent to computation.\');\n            window.location.reload();\n          }, function(errorResponse) {\n            $scope.setStatusMessage(\n              \'Server error: \' + errorResponse.data.error);\n          });\n        };\n      }]\n    };\n  }\n]);'

blocks = {}
debug_info = ''