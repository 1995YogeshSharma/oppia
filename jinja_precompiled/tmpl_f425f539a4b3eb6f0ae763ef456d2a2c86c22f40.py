from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_editor/translation_tab/TranslatorOverviewDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the translation overview and changing\n * translation language.\n */\n\noppia.constant(\'DEFAULT_AUDIO_LANGUAGE\', \'en\');\n\noppia.directive(\'translatorOverview\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        isTranslationTabBusy: \'=\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/exploration_editor/translation_tab/\' +\n        \'translator_overview_directive.html\'),\n      controller: [\n        \'$scope\', \'$rootScope\', \'$window\', \'SUPPORTED_AUDIO_LANGUAGES\',\n        \'LanguageUtilService\', \'TranslationLanguageService\',\n        \'TranslationStatusService\', \'DEFAULT_AUDIO_LANGUAGE\', function(\n            $scope, $rootScope, $window, SUPPORTED_AUDIO_LANGUAGES,\n            LanguageUtilService, TranslationLanguageService,\n            TranslationStatusService, DEFAULT_AUDIO_LANGUAGE) {\n          var LAST_SELECTED_TRANSLATION_LANGUAGE = (\n            \'last_selected_translation_lang\');\n          var prevLanguageCode = $window.localStorage.getItem(\n            LAST_SELECTED_TRANSLATION_LANGUAGE);\n          var allAudioLanguageCodes = LanguageUtilService\n            .getAllAudioLanguageCodes();\n          $scope.languageCode =\n            allAudioLanguageCodes.indexOf(prevLanguageCode) !== -1 ?\n              prevLanguageCode : DEFAULT_AUDIO_LANGUAGE;\n          TranslationLanguageService.setActiveLanguageCode(\n            $scope.languageCode);\n          $scope.languageCodesAndDescriptions = (\n            allAudioLanguageCodes.map(function(languageCode) {\n              return {\n                id: languageCode,\n                description: (\n                  LanguageUtilService.getAudioLanguageDescription(\n                    languageCode))\n              };\n            }));\n          $scope.getTranslationProgressStyle = function() {\n            var numberRequiredAudio = TranslationStatusService\n              .getExplorationAudioRequiredCount();\n            var notAvailable = TranslationStatusService\n              .getExplorationAudioNotAvailableCount();\n            var progressPercent = (\n              100 - (notAvailable / numberRequiredAudio) * 100);\n            return {width: progressPercent + \'%\'};\n          };\n\n          $scope.changeTranslationLanguage = function() {\n            if ($scope.isTranslationTabBusy) {\n              $scope.languageCode = $window.localStorage.getItem(\n                LAST_SELECTED_TRANSLATION_LANGUAGE);\n              $rootScope.$broadcast(\'showTranslationTabBusyModal\');\n              return;\n            }\n            TranslationLanguageService.setActiveLanguageCode(\n              $scope.languageCode);\n            $rootScope.$broadcast(\'refreshAudioTranslationBar\');\n            $window.localStorage.setItem(\n              LAST_SELECTED_TRANSLATION_LANGUAGE, $scope.languageCode);\n          };\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''