from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/CodemirrorMergeviewDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the codemirror mergeview component.\n */\n\noppia.directive(\'codemirrorMergeview\', [\n  function() {\n    return {\n      restrict: \'E\',\n      link: function(scope, element, attrs) {\n        // Require CodeMirror\n        if (angular.isUndefined(window.CodeMirror)) {\n          throw new Error(\'CodeMirror not found.\');\n        }\n\n        var options = scope.$eval(attrs.options);\n        // \'value\', \'orig\' are initial values of left and right\n        // pane respectively\n        var codeMirrorInstance = new window.CodeMirror.MergeView(\n          element[0], angular.extend({\n            value: \' \',\n            orig: \' \'\n          }, options));\n\n        if (!attrs.leftValue) {\n          throw new Error(\'Left pane value is not defined.\');\n        }\n        if (!attrs.rightValue) {\n          throw new Error(\'Right pane value is not defined.\');\n        }\n\n        // Watch for changes and set value in left pane\n        scope.$watch(attrs.leftValue, function(newValue) {\n          if (angular.isString(newValue)) {\n            codeMirrorInstance.edit.setValue(newValue);\n          }\n        });\n\n        // Watch for changes and set value in right pane\n        scope.$watch(attrs.rightValue, function(newValue) {\n          if (angular.isString(newValue)) {\n            codeMirrorInstance.right.orig.setValue(newValue);\n          }\n        });\n      }\n    };\n  }]\n);'

blocks = {}
debug_info = ''