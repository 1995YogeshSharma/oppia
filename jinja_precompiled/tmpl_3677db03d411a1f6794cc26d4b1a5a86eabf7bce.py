from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'domain/learner_dashboard/LearnerDashboardActivityIdsObjectFactorySpec.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Tests for LearnerDashboardActivityIdsObjectFactory.\n */\n\ndescribe(\'Learner dashboard activity ids object factory\', function() {\n  var LearnerDashboardActivityIdsObjectFactory = null;\n\n  beforeEach(module(\'oppia\'));\n\n  beforeEach(inject(function($injector) {\n    LearnerDashboardActivityIdsObjectFactory = $injector.get(\n      \'LearnerDashboardActivityIdsObjectFactory\');\n  }));\n\n  var learnerDashboardActivityIdsDict = {\n    incomplete_exploration_ids: [\'0\', \'1\'],\n    incomplete_collection_ids: [\'2\', \'3\'],\n    completed_exploration_ids: [\'4\', \'5\'],\n    completed_collection_ids: [\'6\', \'7\'],\n    exploration_playlist_ids: [\'8\', \'9\'],\n    collection_playlist_ids: [\'10\', \'11\']\n  };\n\n  it(\'should check if activity id is present among learner dashboard \' +\n     \' activity ids\', function() {\n    var learnerDashboardActivityIds = (\n      LearnerDashboardActivityIdsObjectFactory.createFromBackendDict(\n        learnerDashboardActivityIdsDict));\n\n    expect(learnerDashboardActivityIds.includesActivity(\'0\')).toEqual(true);\n    expect(learnerDashboardActivityIds.includesActivity(\'1\')).toEqual(true);\n    expect(learnerDashboardActivityIds.includesActivity(\'8\')).toEqual(true);\n\n    expect(learnerDashboardActivityIds.includesActivity(\'12\')).toEqual(false);\n    expect(learnerDashboardActivityIds.includesActivity(\'13\')).toEqual(false);\n    expect(learnerDashboardActivityIds.includesActivity(\'14\')).toEqual(false);\n  });\n\n\n  it(\'should add exploration to learner playlist\', function() {\n    var learnerDashboardActivityIds = (\n      LearnerDashboardActivityIdsObjectFactory.createFromBackendDict(\n        learnerDashboardActivityIdsDict));\n\n    learnerDashboardActivityIds.addToExplorationLearnerPlaylist(\'12\');\n    expect(learnerDashboardActivityIds.explorationPlaylistIds).toEqual(\n      [\'8\', \'9\', \'12\']);\n\n    learnerDashboardActivityIds.addToExplorationLearnerPlaylist(\'13\');\n    expect(learnerDashboardActivityIds.explorationPlaylistIds).toEqual(\n      [\'8\', \'9\', \'12\', \'13\']);\n  });\n\n  it(\'should add collection to learner playlist\', function() {\n    var learnerDashboardActivityIds = (\n      LearnerDashboardActivityIdsObjectFactory.createFromBackendDict(\n        learnerDashboardActivityIdsDict));\n\n    learnerDashboardActivityIds.addToCollectionLearnerPlaylist(\'12\');\n    expect(learnerDashboardActivityIds.collectionPlaylistIds).toEqual(\n      [\'10\', \'11\', \'12\']);\n\n    learnerDashboardActivityIds.addToCollectionLearnerPlaylist(\'13\');\n    expect(learnerDashboardActivityIds.collectionPlaylistIds).toEqual(\n      [\'10\', \'11\', \'12\', \'13\']);\n  });\n\n  it(\'should remove exploration from learner playlist\', function() {\n    var learnerDashboardActivityIds = (\n      LearnerDashboardActivityIdsObjectFactory.createFromBackendDict(\n        learnerDashboardActivityIdsDict));\n\n    learnerDashboardActivityIds.removeFromExplorationLearnerPlaylist(\'9\');\n    expect(learnerDashboardActivityIds.explorationPlaylistIds).toEqual(\n      [\'8\', \'12\', \'13\']);\n\n    learnerDashboardActivityIds.removeFromExplorationLearnerPlaylist(\'8\');\n    expect(learnerDashboardActivityIds.explorationPlaylistIds).toEqual(\n      [\'12\', \'13\']);\n  });\n\n  it(\'should remove collection from learner playlist\', function() {\n    var learnerDashboardActivityIds = (\n      LearnerDashboardActivityIdsObjectFactory.createFromBackendDict(\n        learnerDashboardActivityIdsDict));\n\n    learnerDashboardActivityIds.removeFromCollectionLearnerPlaylist(\'11\');\n    expect(learnerDashboardActivityIds.collectionPlaylistIds).toEqual(\n      [\'10\', \'12\', \'13\']);\n\n    learnerDashboardActivityIds.removeFromCollectionLearnerPlaylist(\'10\');\n    expect(learnerDashboardActivityIds.collectionPlaylistIds).toEqual(\n      [\'12\', \'13\']);\n  });\n\n  it(\'should fetch the learner dashboard activity ids domain object from the \' +\n     \' backend summary dict\', function() {\n    var learnerDashboardActivityIdsDict = {\n      incomplete_exploration_ids: [\'0\', \'1\'],\n      incomplete_collection_ids: [\'2\', \'3\'],\n      completed_exploration_ids: [\'4\', \'5\'],\n      completed_collection_ids: [\'6\', \'7\'],\n      exploration_playlist_ids: [\'8\', \'9\'],\n      collection_playlist_ids: [\'10\', \'11\']\n    };\n\n    var learnerDashboardActivityIds = (\n      LearnerDashboardActivityIdsObjectFactory.createFromBackendDict(\n        learnerDashboardActivityIdsDict));\n\n    expect(learnerDashboardActivityIds.incompleteExplorationIds).toEqual(\n      [\'0\', \'1\']);\n    expect(learnerDashboardActivityIds.incompleteCollectionIds).toEqual(\n      [\'2\', \'3\']);\n    expect(learnerDashboardActivityIds.completedExplorationIds).toEqual(\n      [\'4\', \'5\']);\n    expect(learnerDashboardActivityIds.completedCollectionIds).toEqual(\n      [\'6\', \'7\']);\n    expect(learnerDashboardActivityIds.explorationPlaylistIds).toEqual(\n      [\'8\', \'9\']);\n    expect(learnerDashboardActivityIds.collectionPlaylistIds).toEqual(\n      [\'10\', \'11\']);\n  });\n});'

blocks = {}
debug_info = ''