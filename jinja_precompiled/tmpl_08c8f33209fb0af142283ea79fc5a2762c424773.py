from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/topic_editor/main_editor/StoriesListDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for the stories list viewer.\n */\noppia.directive(\'storiesList\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        storySummaries: \'=\',\n        getTopic: \'&topic\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/topic_editor/main_editor/stories_list_directive.html\'),\n      controller: [\n        \'$scope\', \'$rootScope\', \'$uibModal\', \'$window\',\n        \'EditableTopicBackendApiService\', \'UrlService\', \'UndoRedoService\',\n        \'UrlInterpolationService\', \'TopicUpdateService\',\n        \'EVENT_STORY_SUMMARIES_INITIALIZED\',\n        function(\n            $scope, $rootScope, $uibModal, $window,\n            EditableTopicBackendApiService, UrlService, UndoRedoService,\n            UrlInterpolationService, TopicUpdateService,\n            EVENT_STORY_SUMMARIES_INITIALIZED) {\n          var topicId = UrlService.getTopicIdFromUrl();\n          var STORY_EDITOR_URL_TEMPLATE = \'/story_editor/<topic_id>/<story_id>\';\n          $scope.STORY_TABLE_COLUMN_HEADINGS = [\'title\', \'node_count\'];\n          $scope.openStoryEditor = function(storyId) {\n            if (UndoRedoService.getChangeCount() > 0) {\n              $uibModal.open({\n                templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                  \'/pages/topic_editor/main_editor/\' +\n                  \'save_pending_changes_modal_directive.html\'),\n                backdrop: true,\n                controller: [\n                  \'$scope\', \'$uibModalInstance\',\n                  function($scope, $uibModalInstance) {\n                    $scope.cancel = function() {\n                      $uibModalInstance.dismiss(\'cancel\');\n                    };\n                  }\n                ]\n              });\n            } else {\n              $window.open(\n                UrlInterpolationService.interpolateUrl(\n                  STORY_EDITOR_URL_TEMPLATE, {\n                    topic_id: topicId,\n                    story_id: storyId\n                  }), \'_self\');\n            }\n          };\n\n          $scope.deleteCanonicalStory = function(storyId) {\n            var modalInstance = $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/topic_editor/main_editor/\' +\n                \'delete_story_modal_directive.html\'),\n              backdrop: true,\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.confirmDeletion = function() {\n                    $uibModalInstance.close();\n                  };\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }\n              ]\n            });\n\n            modalInstance.result.then(function() {\n              TopicUpdateService.removeCanonicalStoryId(\n                $scope.getTopic(), storyId);\n              for (var i = 0; i < $scope.storySummaries.length; i++) {\n                if ($scope.storySummaries[i].id === storyId) {\n                  $scope.storySummaries.splice(i, 1);\n                }\n              }\n            });\n          };\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''