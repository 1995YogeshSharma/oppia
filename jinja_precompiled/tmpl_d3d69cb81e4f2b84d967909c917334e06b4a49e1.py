from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/skill_editor/editor_tab/SkillMisconceptionsEditorDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the skill misconceptions editor.\n */\n\noppia.directive(\'skillMisconceptionsEditor\', [\n  \'UrlInterpolationService\', \'SkillUpdateService\', \'SkillEditorStateService\',\n  function(\n      UrlInterpolationService, SkillUpdateService, SkillEditorStateService) {\n    return {\n      restrict: \'E\',\n      scope: {},\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/skill_editor/editor_tab/\' +\n        \'skill_misconceptions_editor_directive.html\'),\n      controller: [\n        \'$scope\', \'$filter\', \'$uibModal\', \'$rootScope\',\n        \'MisconceptionObjectFactory\',\n        function(\n            $scope, $filter, $uibModal, $rootScope,\n            MisconceptionObjectFactory) {\n          $scope.skill = SkillEditorStateService.getSkill();\n          $scope.misconceptions = $scope.skill.getMisconceptions();\n\n          $scope.isEditable = function() {\n            return true;\n          };\n\n          $scope.changeActiveMisconceptionIndex = function(idx) {\n            if (idx === $scope.activeMisconceptionIndex) {\n              $scope.activeMisconceptionIndex = null;\n            } else {\n              $scope.activeMisconceptionIndex = idx;\n            }\n          };\n\n          $scope.getMisconceptionSummary = function(misconception) {\n            return misconception.getName();\n          };\n\n          $scope.openDeleteMisconceptionModal = function(index, evt) {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/skill_editor/editor_tab/\' +\n                \'delete_misconception_modal_directive.html\'),\n              backdrop: \'static\',\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.skill = SkillEditorStateService.getSkill();\n\n                  $scope.confirm = function() {\n                    $uibModalInstance.close({\n                      id: $scope.skill.getMisconceptionAtIndex(index).getId()\n                    });\n                  };\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }]\n            }).result.then(function(result) {\n              SkillUpdateService.deleteMisconception($scope.skill, result.id);\n              $scope.misconceptions = $scope.skill.getMisconceptions();\n              $scope.activeMisconceptionIndex = null;\n            });\n          };\n\n          $scope.openAddMisconceptionModal = function() {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/skill_editor/editor_tab/\' +\n                \'add_misconception_modal_directive.html\'),\n              backdrop: \'static\',\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.skill = SkillEditorStateService.getSkill();\n                  $scope.MISCONCEPTION_PROPERTY_FORM_SCHEMA = {\n                    type: \'html\',\n                    ui_config: {}\n                  };\n\n                  $scope.misconceptionName = \'\';\n                  $scope.misconceptionNotes = \'\';\n                  $scope.misconceptionFeedback = \'\';\n\n                  $scope.saveMisconception = function() {\n                    var newMisconceptionId =\n                      $scope.skill.getNextMisconceptionId();\n                    $uibModalInstance.close({\n                      misconception: MisconceptionObjectFactory.create(\n                        newMisconceptionId,\n                        $scope.misconceptionName,\n                        $scope.misconceptionNotes,\n                        $scope.misconceptionFeedback)\n                    });\n                  };\n\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }]\n            }).result.then(function(result) {\n              SkillUpdateService.addMisconception(\n                $scope.skill, result.misconception);\n              $scope.misconceptions = $scope.skill.getMisconceptions();\n            });\n          };\n        }]\n    };\n  }\n]);'

blocks = {}
debug_info = ''