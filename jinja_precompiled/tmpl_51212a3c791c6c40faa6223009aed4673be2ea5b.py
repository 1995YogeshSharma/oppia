from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_player/SupplementalCardDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for the supplemental card.\n */\n\noppia.directive(\'supplementalCard\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        onClickContinueButton: \'&\',\n        isLearnAgainButton: \'&\',\n        onSubmitAnswer: \'&\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/exploration_player/supplemental_card_directive.html\'),\n      controller: [\n        \'$scope\', \'$timeout\', \'$window\', \'ExplorationPlayerService\',\n        \'PlayerPositionService\', \'PlayerTranscriptService\',\n        \'WindowDimensionsService\', \'CONTENT_FOCUS_LABEL_PREFIX\',\n        \'TWO_CARD_THRESHOLD_PX\', \'EVENT_ACTIVE_CARD_CHANGED\',\n        \'CONTINUE_BUTTON_FOCUS_LABEL\', \'AudioTranslationManagerService\',\n        \'AudioPlayerService\', \'AutogeneratedAudioPlayerService\',\n        \'COMPONENT_NAME_FEEDBACK\', \'AUDIO_HIGHLIGHT_CSS_CLASS\',\n        function(\n            $scope, $timeout, $window, ExplorationPlayerService,\n            PlayerPositionService, PlayerTranscriptService,\n            WindowDimensionsService, CONTENT_FOCUS_LABEL_PREFIX,\n            TWO_CARD_THRESHOLD_PX, EVENT_ACTIVE_CARD_CHANGED,\n            CONTINUE_BUTTON_FOCUS_LABEL, AudioTranslationManagerService,\n            AudioPlayerService, AutogeneratedAudioPlayerService,\n            COMPONENT_NAME_FEEDBACK, AUDIO_HIGHLIGHT_CSS_CLASS) {\n          var updateActiveCard = function() {\n            var index = PlayerPositionService.getActiveCardIndex();\n            if (index === null) {\n              return;\n            }\n            $scope.activeCard = PlayerTranscriptService.getCard(index);\n            $scope.clearHelpCard();\n            $scope.lastAnswer =\n              PlayerTranscriptService.getLastAnswerOnActiveCard(index);\n          };\n\n          $scope.OPPIA_AVATAR_IMAGE_URL = (\n            UrlInterpolationService.getStaticImageUrl(\n              \'/avatar/oppia_avatar_100px.svg\'));\n\n          $scope.CONTINUE_BUTTON_FOCUS_LABEL = CONTINUE_BUTTON_FOCUS_LABEL;\n\n          $scope.helpCardHtml = null;\n          $scope.helpCardHasContinueButton = false;\n\n          $scope.windowDimensionsService = WindowDimensionsService;\n\n          // We use the max because the height property of the help card is\n          // unstable while animating, causing infinite digest errors.\n          var maxHelpCardHeightSeen = 0;\n          $scope.clearHelpCard = function() {\n            $scope.helpCardHtml = null;\n            $scope.helpCardHasContinueButton = false;\n            maxHelpCardHeightSeen = 0;\n          };\n\n          $scope.isHelpCardTall = function() {\n            var helpCard = $(\'.conversation-skin-help-card\');\n            if (helpCard.height() > maxHelpCardHeightSeen) {\n              maxHelpCardHeightSeen = helpCard.height();\n            }\n            return maxHelpCardHeightSeen > $(window).height() - 100;\n          };\n\n          $scope.getHelpCardBottomPosition = function() {\n            var helpCard = $(\'.conversation-skin-help-card\');\n            var container = $(\'.conversation-skin-supplemental-card-container\');\n            return Math.max(container.height() - helpCard.height() / 2, 0);\n          };\n\n          $scope.submitAnswer = function(answer, interactionRulesService) {\n            // Do not clear the help card or submit an answer if there is an\n            // upcoming card.\n            if ($scope.activeCard.destStateName) {\n              return;\n            }\n\n            $scope.clearHelpCard();\n            $scope.onSubmitAnswer({\n              answer: answer,\n              rulesService: interactionRulesService\n            });\n          };\n\n          $scope.$on(EVENT_ACTIVE_CARD_CHANGED, function() {\n            updateActiveCard();\n          });\n\n          $scope.$on(\'helpCardAvailable\', function(event, helpCard) {\n            $scope.helpCardHtml = helpCard.helpCardHtml;\n            $scope.helpCardHasContinueButton = helpCard.hasContinueButton;\n          });\n\n          $scope.getFeedbackAudioHighlightClass = function() {\n            if (AudioTranslationManagerService\n              .getCurrentComponentName() ===\n              COMPONENT_NAME_FEEDBACK &&\n              (AudioPlayerService.isPlaying() ||\n              AutogeneratedAudioPlayerService.isPlaying())) {\n              return AUDIO_HIGHLIGHT_CSS_CLASS;\n            }\n          };\n\n          updateActiveCard();\n        }\n      ]\n    };\n  }\n]);'

blocks = {}
debug_info = ''