from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/skill_editor/editor_tab/SkillDescriptionEditorDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the skill description editor.\n */\n\noppia.directive(\'skillDescriptionEditor\', [\n  \'UrlInterpolationService\', \'SkillUpdateService\', \'SkillEditorStateService\',\n  \'SkillObjectFactory\',\n  function(\n      UrlInterpolationService, SkillUpdateService, SkillEditorStateService,\n      SkillObjectFactory) {\n    return {\n      restrict: \'E\',\n      scope: {},\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/skill_editor/editor_tab/\' +\n        \'skill_description_editor_directive.html\'),\n      controller: [\n        \'$scope\',\n        function($scope) {\n          $scope.skill = SkillEditorStateService.getSkill();\n          $scope.skillRights = SkillEditorStateService.getSkillRights();\n          $scope.skillDescriptionEditorIsShown = false;\n\n          $scope.openSkillDescriptionEditor = function() {\n            if ($scope.canEditSkillDescription()) {\n              $scope.skillDescriptionEditorIsShown = true;\n              $scope.tmpSkillDescription = $scope.skill.getDescription();\n            }\n          };\n\n          $scope.closeSkillDescriptionEditor = function() {\n            $scope.skillDescriptionEditorIsShown = false;\n          };\n\n          $scope.canEditSkillDescription = function() {\n            return $scope.skillRights.canEditSkillDescription();\n          };\n\n          $scope.saveSkillDescription = function(newSkillDescription) {\n            if (SkillObjectFactory.hasValidDescription(\n              newSkillDescription)) {\n              $scope.skillDescriptionEditorIsShown = false;\n              SkillUpdateService.setSkillDescription(\n                $scope.skill,\n                newSkillDescription);\n            }\n          };\n        }\n      ]\n    };\n  }\n]);'

blocks = {}
debug_info = ''