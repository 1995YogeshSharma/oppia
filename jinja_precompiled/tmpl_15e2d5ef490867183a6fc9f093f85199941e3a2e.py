from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/TopicCreationService.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Modal and functionality for the create topic button.\n */\n\noppia.factory(\'TopicCreationService\', [\n  \'$http\', \'$window\', \'$uibModal\', \'$rootScope\', \'$timeout\', \'AlertsService\',\n  \'UrlInterpolationService\',\n  function(\n      $http, $window, $uibModal, $rootScope, $timeout, AlertsService,\n      UrlInterpolationService) {\n    var TOPIC_EDITOR_URL_TEMPLATE = \'/topic_editor/<topic_id>\';\n    var topicCreationInProgress = false;\n\n    return {\n      createNewTopic: function() {\n        if (topicCreationInProgress) {\n          return;\n        }\n        var modalInstance = $uibModal.open({\n          templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n            \'/pages/topics_and_skills_dashboard/\' +\n            \'new_topic_name_editor_directive.html\'),\n          backdrop: true,\n          controller: [\n            \'$scope\', \'$uibModalInstance\',\n            function($scope, $uibModalInstance) {\n              $scope.topicName = \'\';\n              $scope.isTopicNameEmpty = function(topicName) {\n                return (topicName === \'\');\n              };\n              $scope.save = function(topicName) {\n                $uibModalInstance.close(topicName);\n              };\n              $scope.cancel = function() {\n                $uibModalInstance.dismiss(\'cancel\');\n              };\n            }\n          ]\n        });\n\n        modalInstance.result.then(function(topicName) {\n          if (topicName === \'\') {\n            throw Error(\'Topic name cannot be empty\');\n          }\n          topicCreationInProgress = true;\n          AlertsService.clearWarnings();\n\n          $rootScope.loadingMessage = \'Creating topic\';\n          $http.post(\'/topic_editor_handler/create_new\', {name: topicName})\n            .then(function(response) {\n              $timeout(function() {\n                $window.location = UrlInterpolationService.interpolateUrl(\n                  TOPIC_EDITOR_URL_TEMPLATE, {\n                    topic_id: response.data.topicId\n                  }\n                );\n              }, 150);\n            }, function() {\n              $rootScope.loadingMessage = \'\';\n            });\n        });\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''