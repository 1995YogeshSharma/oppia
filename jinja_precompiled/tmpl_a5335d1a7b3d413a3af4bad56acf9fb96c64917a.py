from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/story_editor/StoryEditor.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Primary controller for the story editor page.\n */\noppia.constant(\'NODE_ID_PREFIX\', \'node_\');\n\noppia.controller(\'StoryEditor\', [\n  \'$scope\', \'$uibModal\', \'$window\', \'UrlService\', \'StoryEditorStateService\',\n  \'UrlInterpolationService\', \'UndoRedoService\',\n  function(\n      $scope, $uibModal, $window, UrlService, StoryEditorStateService,\n      UrlInterpolationService, UndoRedoService) {\n    var TOPIC_EDITOR_URL_TEMPLATE = \'/topic_editor/<topicId>\';\n    var topicId = UrlService.getTopicIdFromUrl();\n    StoryEditorStateService.loadStory(\n      topicId, UrlService.getStoryIdFromUrl());\n\n    $scope.returnToTopicEditorPage = function() {\n      if (UndoRedoService.getChangeCount() > 0) {\n        var modalInstance = $uibModal.open({\n          templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n            \'/pages/story_editor/save_pending_changes_modal_directive.html\'),\n          backdrop: true,\n          controller: [\n            \'$scope\', \'$uibModalInstance\',\n            function($scope, $uibModalInstance) {\n              $scope.cancel = function() {\n                $uibModalInstance.dismiss(\'cancel\');\n              };\n            }\n          ]\n        });\n      } else {\n        $window.open(\n          UrlInterpolationService.interpolateUrl(\n            TOPIC_EDITOR_URL_TEMPLATE, {\n              topicId: topicId\n            }\n          ), \'_self\');\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''