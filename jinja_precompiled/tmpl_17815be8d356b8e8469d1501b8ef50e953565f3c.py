from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/hint_editor_directive.html'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'<div style="height: 100%;">\n  <div ng-if="!hintEditorIsOpen"\n       style="height: 100%;"\n       ng-attr-title="<[isEditable ? \'Edit hint\' : \'\']>">\n    <div class="oppia-readonly-rule-tile"\n         ng-class="{\'oppia-editable-section\': isEditable}">\n      <div class="oppia-rule-preview oppia-transition-200">\n        <div class="oppia-click-to-start-editing protractor-test-open-hint-editor"\n             ng-if="isEditable" ng-click="openHintEditor()">\n          <i ng-if="isEditable"\n             class="material-icons oppia-editor-edit-icon pull-right"\n             title="Edit Hint">&#xE254;\n          </i>\n        </div>\n\n        <strong>Hint #<[getIndexPlusOne()]> is...</strong>\n        <span>\n          <angular-html-bind class="oppia-rte-editor" html-data="hint.hintContent.getHtml()">\n          </angular-html-bind>\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if="isEditable && hintEditorIsOpen">\n    <form role="form"\n          class="form-inline"\n          name="editHintForm"\n          ng-submit="saveThisHint()">\n      <div class="oppia-rule-details-header">\n        <strong>Hint #<[getIndexPlusOne()]> is...</strong>\n        <!-- TODO(sll): Find a way to do this without resorting to private properties like _html -->\n        <schema-based-editor schema="HINT_FORM_SCHEMA"\n                             local-value="hint.hintContent._html">\n        </schema-based-editor>\n      </div>\n    </form>\n\n    <div class="oppia-rule-save-cancel-buttons">\n      <div class="pull-right">\n        <button type="button"\n                class="btn btn-default protractor-test-cancel-hint-edit"\n                ng-click="cancelThisHintEdit()">\n          Cancel\n        </button>\n        <button type="button"\n                class="btn btn-success protractor-test-save-hint-edit"\n                ng-disabled="!hint.hintContent.getHtml() || editHintForm.$invalid"\n                ng-click="saveThisHint()">\n          Save\n        </button>\n      </div>\n\n      <div style="clear: both;"></div>\n    </div>\n  </div>\n</div>'

blocks = {}
debug_info = ''