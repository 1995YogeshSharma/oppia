from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'domain/statistics/ExplorationIssueObjectFactorySpec.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Unit tests for the ExplorationIssueObjectFactory.\n */\n\ndescribe(\'Exploration Issue Object Factory\', function() {\n  beforeEach(module(\'oppia\'));\n\n  beforeEach(inject(function($injector) {\n    this.eiof = $injector.get(\'ExplorationIssueObjectFactory\');\n  }));\n\n  it(\'should create a new exploration issue\', function() {\n    var explorationIssueObject = new this.eiof(\'EarlyQuit\', {}, [], 1, true);\n\n    expect(explorationIssueObject.issueType).toEqual(\'EarlyQuit\');\n    expect(explorationIssueObject.issueCustomizationArgs).toEqual({});\n    expect(explorationIssueObject.playthroughIds).toEqual([]);\n    expect(explorationIssueObject.schemaVersion).toEqual(1);\n    expect(explorationIssueObject.isValid).toEqual(true);\n  });\n\n  it(\'should create a new exploration issue from a backend dict\', function() {\n    var explorationIssueObject = this.eiof.createFromBackendDict({\n      issue_type: \'EarlyQuit\',\n      issue_customization_args: {},\n      playthrough_ids: [],\n      schema_version: 1,\n      is_valid: true\n    });\n\n    expect(explorationIssueObject.issueType).toEqual(\'EarlyQuit\');\n    expect(explorationIssueObject.issueCustomizationArgs).toEqual({});\n    expect(explorationIssueObject.playthroughIds).toEqual([]);\n    expect(explorationIssueObject.schemaVersion).toEqual(1);\n    expect(explorationIssueObject.isValid).toEqual(true);\n  });\n});'

blocks = {}
debug_info = ''