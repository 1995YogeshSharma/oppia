from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/RatingDisplayDirectiveSpec.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Tests that ratings are being displayed correctly.\n */\n\ndescribe(\'Rating display directive\', function() {\n  var outerScope, ctrlScope;\n\n  beforeEach(module(\'directiveTemplates\'));\n  beforeEach(module(\'oppia\', GLOBALS.TRANSLATOR_PROVIDER_FOR_TESTS));\n  beforeEach(inject(function($compile, $rootScope, $templateCache) {\n    var templateHtml = $templateCache.get(\n      \'/core/templates/dev/head/components/rating_display_directive.html\');\n    $compile(templateHtml)($rootScope);\n    $rootScope.$digest();\n\n    outerScope = $rootScope.$new();\n\n    var elem = angular.element(\n      \'<rating-display rating-value="5" is-editable="true">\' +\n      \'</rating-display>\');\n    var compiledElem = $compile(elem)(outerScope);\n    outerScope.$digest();\n    ctrlScope = compiledElem[0].getControllerScope();\n  }));\n\n  it(\'should display the correct number of stars\', function() {\n    ctrlScope.ratingValue = 4.2;\n    outerScope.$digest();\n    // Note the array here is zero-indexed but ratings are one-indexed.\n    expect(ctrlScope.stars[0].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[1].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[2].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[3].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[4].cssClass).toBe(\'fa-star-o\');\n\n    ctrlScope.ratingValue = 1.7;\n    outerScope.$digest();\n    expect(ctrlScope.stars[0].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[1].cssClass).toBe(\'fa-star-half-o\');\n    expect(ctrlScope.stars[2].cssClass).toBe(\'fa-star-o\');\n    expect(ctrlScope.stars[3].cssClass).toBe(\'fa-star-o\');\n    expect(ctrlScope.stars[4].cssClass).toBe(\'fa-star-o\');\n\n    ctrlScope.ratingValue = 1.9;\n    outerScope.$digest();\n    expect(ctrlScope.stars[0].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[1].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[2].cssClass).toBe(\'fa-star-o\');\n    expect(ctrlScope.stars[3].cssClass).toBe(\'fa-star-o\');\n    expect(ctrlScope.stars[4].cssClass).toBe(\'fa-star-o\');\n\n    ctrlScope.ratingValue = 2.25;\n    outerScope.$digest();\n    expect(ctrlScope.stars[0].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[1].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[2].cssClass).toBe(\'fa-star-half-o\');\n    expect(ctrlScope.stars[3].cssClass).toBe(\'fa-star-o\');\n    expect(ctrlScope.stars[4].cssClass).toBe(\'fa-star-o\');\n\n    ctrlScope.ratingValue = 4.3;\n    outerScope.$digest();\n    expect(ctrlScope.stars[0].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[1].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[2].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[3].cssClass).toBe(\'fa-star\');\n    expect(ctrlScope.stars[4].cssClass).toBe(\'fa-star-half-o\');\n  });\n});'

blocks = {}
debug_info = ''