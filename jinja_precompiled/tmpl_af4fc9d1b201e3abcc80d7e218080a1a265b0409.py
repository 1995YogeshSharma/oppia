from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'services/ValidatorsService.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Service for validating things and (optionally) displaying\n * warning messages if the validation fails.\n */\n\noppia.factory(\'ValidatorsService\', [\n  \'$filter\', \'AlertsService\', \'INVALID_NAME_CHARS\',\n  function($filter, AlertsService, INVALID_NAME_CHARS) {\n    return {\n      /**\n       * Checks whether an entity name is valid, and displays a warning message\n       * if it isn\'t.\n       * @param {string} input - The input to be checked.\n       * @param {boolean} showWarnings - Whether to show warnings in the\n       *   butterbar.\n       * @return {boolean} True if the entity name is valid, false otherwise.\n       */\n      isValidEntityName: function(input, showWarnings, allowEmpty) {\n        input = $filter(\'normalizeWhitespace\')(input);\n        if (!input && !allowEmpty) {\n          if (showWarnings) {\n            AlertsService.addWarning(\'Please enter a non-empty name.\');\n          }\n          return false;\n        }\n\n        for (var i = 0; i < INVALID_NAME_CHARS.length; i++) {\n          if (input.indexOf(INVALID_NAME_CHARS[i]) !== -1) {\n            if (showWarnings) {\n              AlertsService.addWarning(\n                \'Invalid input. Please use a non-empty description \' +\n                \'consisting of alphanumeric characters, spaces and/or hyphens.\'\n              );\n            }\n            return false;\n          }\n        }\n        return true;\n      },\n      isValidExplorationTitle: function(input, showWarnings) {\n        if (!this.isValidEntityName(input, showWarnings)) {\n          return false;\n        }\n\n        if (input.length > 40) {\n          if (showWarnings) {\n            AlertsService.addWarning(\n              \'Exploration titles should be at most 40 characters long.\');\n          }\n          return false;\n        }\n\n        return true;\n      },\n      // NB: this does not check whether the card name already exists in the\n      // states dict.\n      isValidStateName: function(input, showWarnings) {\n        if (!this.isValidEntityName(input, showWarnings)) {\n          return false;\n        }\n\n        if (input.length > 50) {\n          if (showWarnings) {\n            AlertsService.addWarning(\n              \'Card names should be at most 50 characters long.\');\n          }\n          return false;\n        }\n\n        return true;\n      },\n      isNonempty: function(input, showWarnings) {\n        if (!input) {\n          if (showWarnings) {\n            // TODO(sll): Allow this warning to be more specific in terms of\n            // what needs to be entered.\n            AlertsService.addWarning(\'Please enter a non-empty value.\');\n          }\n          return false;\n        }\n        return true;\n      },\n      isValidExplorationId: function(input, showWarnings) {\n        // Exploration IDs are urlsafe base64-encoded.\n        var VALID_ID_CHARS_REGEX = /^[a-zA-Z0-9_\\-]+$/g;\n        if (!input || !VALID_ID_CHARS_REGEX.test(input)) {\n          if (showWarnings) {\n            AlertsService.addWarning(\'Please enter a valid exploration ID.\');\n          }\n          return false;\n        }\n        return true;\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''