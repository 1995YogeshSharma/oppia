from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/outcome_editor_directive.html'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'<style>\n  outcome-editor .oppia-confusing-outcome-warning-text {\n    color: rgb(200, 0, 0);\n    font-style: italic;\n  }\n</style>\n<div ng-if="!feedbackEditorIsOpen && displayFeedback"\n     title="<[isEditable() ? \'Edit feedback\' : \'\']>"\n     style="height: 100%;">\n  <div class="oppia-readonly-rule-tile protractor-test-edit-outcome-feedback-button"\n       ng-class="{\'oppia-editable-section\': isEditable()}">\n    <div class="oppia-rule-preview oppia-transition-200">\n      <div class="oppia-click-to-start-editing protractor-test-open-outcome-feedback-editor"\n           ng-if="isEditable()" ng-click="openFeedbackEditor()">\n        <i ng-if="isEditable()" class="material-icons oppia-editor-edit-icon pull-right"\n           title="Edit Feedback">&#xE254;\n        </i>\n      </div>\n\n      <strong>Oppia tells the learner...</strong>\n      <div style="position: relative;">\n        <span ng-if="isSelfLoopWithNoFeedback(outcome) && !areWarningsSuppressed()">\n          <span class="oppia-confusing-outcome-warning-text">\n            <i class="material-icons">&#xE002;</i>\n            Please give Oppia something useful to say here.\n          </span>\n        </span>\n        <span ng-if="(!isSelfLoopWithNoFeedback(outcome) && !outcome.hasNonemptyFeedback()) || (isSelfLoopWithNoFeedback(outcome) && areWarningsSuppressed())"\n              style="color: #888">\n          <em>Nothing</em>\n        </span>\n        <span ng-if="outcome.hasNonemptyFeedback()" style="word-wrap: break-word;">\n          <angular-html-bind class="oppia-rte-editor" html-data="outcome.feedback.getHtml()">\n          </angular-html-bind>\n        </span>\n      </div>\n    </div>\n    <!-- This is a dummy div created to mask the contents when hovored above outcome editor contents -->\n    <div class="oppia-rule-preview-section-mask"></div>\n  </div>\n</div>\n\n<div ng-if="isEditable() && feedbackEditorIsOpen">\n  <form role="form"\n        class="form-inline protractor-test-edit-outcome-feedback"\n        name="editOutcomeForm.editFeedbackForm">\n    <outcome-feedback-editor outcome="outcome">\n    </outcome-feedback-editor>\n  </form>\n\n  <div class="oppia-rule-save-cancel-buttons">\n    <div class="pull-right">\n      <button type="button"\n              class="btn btn-default"\n              ng-click="cancelThisFeedbackEdit()">\n        Cancel\n      </button>\n      <button type="button"\n              class="btn btn-success protractor-test-save-outcome-feedback"\n              ng-disabled="invalidStateAfterFeedbackSave() || editOutcomeForm.editFeedbackForm.$invalid"\n              ng-click="saveThisFeedback(true)">\n        Save Feedback\n      </button>\n    </div>\n\n    <div style="clear: both;"></div>\n  </div>\n</div>\n\n<br ng-if="displayFeedback">\n\n<div ng-if="!destinationEditorIsOpen && !isInQuestionMode()"\n     style="height: 100%;"\n     title="<[isEditable() ? \'Change the destination card\' : \'\']>">\n  <div class="oppia-readonly-rule-tile protractor-test-edit-outcome-dest-button"\n       ng-class="{\'oppia-editable-section\': isEditable()}">\n    <div class="oppia-rule-preview oppia-transition-200">\n      <div class="oppia-click-to-start-editing protractor-test-open-outcome-dest-editor"\n           ng-if="isEditable()" ng-click="openDestinationEditor()">\n        <i ng-if="isEditable()" class="material-icons oppia-editor-edit-icon pull-right"\n           title="Edit Destination">&#xE254;\n        </i>\n      </div>\n\n      <div ng-if="outcome.dest !== getActiveStateName()">\n        <strong ng-if="displayFeedback">And afterwards, directs the learner\n        to...</strong>\n        <strong ng-if="!displayFeedback">Oppia directs the learner to...</strong>\n        <span ng-if="!isSelfLoop(outcome)" style="position: relative;">\n          <[outcome.dest]>\n        </span>\n        <span ng-if="isSelfLoop(outcome)" style="position: relative;">\n          <span ng-if="!outcome.refresherExplorationId">(try again)</span>\n          <span ng-if="outcome.refresherExplorationId">\n            (try again, with refresher exploration "<[outcome.refresherExplorationId]>")\n          </span>\n        </span>\n        <div style="margin-top: 1em;" ng-if="outcome.missingPrerequisiteSkillId && canAddPrerequisiteSkill">\n          <strong> Attached prerequisite skill for the current state: </strong>\n          <[outcome.missingPrerequisiteSkillId]>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div ng-if="isEditable() && destinationEditorIsOpen && !isInQuestionMode()">\n  <form role="form"\n        class="form-inline protractor-test-edit-outcome-dest"\n        name="editOutcomeForm.editDestForm"\n        ng-submit="saveThisDestination()">\n    <outcome-destination-editor outcome="outcome"\n                                outcome-has-feedback="displayFeedback"\n                                add-state="addState">\n    </outcome-destination-editor>\n  </form>\n\n  <div class="oppia-rule-save-cancel-buttons">\n    <div class="pull-right">\n      <button type="button"\n              class="btn btn-default protractor-test-cancel-outcome-dest"\n              ng-click="cancelThisDestinationEdit()">\n        Cancel\n      </button>\n      <button type="button"\n              class="btn btn-success protractor-test-save-outcome-dest"\n              ng-disabled="invalidStateAfterDestinationSave() || editOutcomeForm.editDestForm.$invalid"\n              ng-click="saveThisDestination()">\n        Save Destination\n      </button>\n    </div>\n\n    <div style="clear: both;"></div>\n  </div>\n</div>\n\n\n<div class="oppia-correctness-label-editor" ng-if="isCorrectnessFeedbackEnabled() && !isCurrentInteractionLinear()" style="margin-left: 4px; margin-top: 18px;">\n  <div ng-if="!isEditable()"\n       title="<[isEditable() ? \'Edit correctness setting\' : \'\']>"\n       style="height: 100%;">\n    <div class="oppia-readonly-rule-tile"\n         ng-class="{\'oppia-editable-section\': isEditable()}">\n      <div class="oppia-rule-details-header">\n        <div class="oppia-click-to-start-editing"\n             ng-if="isEditable()" ng-click="openCorrectnessLabelEditor()">\n          <i ng-if="isEditable()" class="material-icons oppia-editor-edit-icon pull-right"\n             title="Edit Correctness setting">&#xE254;\n          </i>\n        </div>\n\n        <strong>The answers falling under this group are\n          <span ng-if="outcome.labelledAsCorrect" style="color: rgb(20, 180, 15)">\n            correct\n          </span>\n          <span ng-if="!outcome.labelledAsCorrect" style="color: rgb(243, 13, 13)">\n            incorrect\n          </span>\n        </strong>\n      </div>\n    </div>\n  </div>\n\n  <div ng-if="isEditable()">\n    <strong>The answers in this group are correct</strong>\n    <input type="checkbox" ng-model="outcome.labelledAsCorrect" ng-change="onChangeCorrectnessLabel()">\n  </div>\n</div>'

blocks = {}
debug_info = ''