from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/creator_dashboard/CreatorDashboardSpec.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Unit tests for the controller of the page showing the\n * user\'s explorations.\n */\n\ndescribe(\'Creator dashboard controller\', function() {\n  describe(\'CreatorDashboard\', function() {\n    var scope, ctrl;\n    var mockDashboardBackendApiService;\n    var dashboardData = {\n      explorationsList: [{\n        category: \'Featured category\',\n        id: \'featured_exp_id\',\n        num_open_threads: 2,\n        num_total_threads: 3,\n        status: \'public\',\n        title: \'Featured exploration\'\n      }, {\n        category: \'Private category\',\n        id: \'private_exp_id\',\n        num_open_threads: 0,\n        num_total_threads: 0,\n        status: \'private\',\n        title: \'Private exploration\'\n      }],\n      collectionsList: [],\n      dashboardStats: {\n        total_plays: 2,\n        average_ratings: 3,\n        num_ratings: 2,\n        total_open_feedback: 1\n      },\n      lastWeekStats: {\n        total_plays: 1,\n        average_ratings: 4,\n        num_ratings: 1,\n        total_open_feedback: 0\n      }\n    };\n\n    beforeEach(module(\'oppia\', GLOBALS.TRANSLATOR_PROVIDER_FOR_TESTS));\n\n    beforeEach(function() {\n      module(\'oppia\');\n      module(function($provide) {\n        $provide.factory(\n          \'CreatorDashboardBackendApiService\', [\'$q\', function($q) {\n            var fetchDashboardData = function() {\n              return $q.resolve(dashboardData);\n            };\n            return {\n              fetchDashboardData: fetchDashboardData\n            };\n          }]);\n      });\n    });\n\n    beforeEach(inject(\n      function($controller, $rootScope, CreatorDashboardBackendApiService) {\n        mockDashboardBackendApiService = CreatorDashboardBackendApiService;\n        spyOn(mockDashboardBackendApiService, \'fetchDashboardData\')\n          .and.callThrough();\n        scope = $rootScope.$new();\n        ctrl = $controller(\'CreatorDashboard\', {\n          $scope: scope,\n          AlertsService: null,\n          CreatorDashboardBackendApiService: mockDashboardBackendApiService\n        });\n      }\n    ));\n\n    it(\'should have the correct data for creator dashboard\', function() {\n      expect(scope.explorationsList).toEqual(dashboardData.explorations_list);\n      expect(scope.collectionsList).toEqual(dashboardData.collections_list);\n      expect(scope.dashboardStats).toEqual(dashboardData.dashboard_stats);\n      expect(scope.lastWeekStats).toEqual(dashboardData.last_week_stats);\n    });\n  });\n});'

blocks = {}
debug_info = ''