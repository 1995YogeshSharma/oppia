from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/summary_tile/CollectionSummaryTileDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Summary tile for collections.\n */\n\noppia.constant(\n  \'COLLECTION_VIEWER_URL\', \'/collection/<collection_id>\');\noppia.constant(\n  \'COLLECTION_EDITOR_URL\', \'/collection_editor/create/<collection_id>\');\n\noppia.directive(\'collectionSummaryTile\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        getCollectionId: \'&collectionId\',\n        getCollectionTitle: \'&collectionTitle\',\n        getObjective: \'&objective\',\n        getNodeCount: \'&nodeCount\',\n        getLastUpdatedMsec: \'&lastUpdatedMsec\',\n        getThumbnailIconUrl: \'&thumbnailIconUrl\',\n        getThumbnailBgColor: \'&thumbnailBgColor\',\n        isLinkedToEditorPage: \'=?isLinkedToEditorPage\',\n        getCategory: \'&category\',\n        isPlaylistTile: \'&isPlaylistTile\',\n        showLearnerDashboardIconsIfPossible: (\n          \'&showLearnerDashboardIconsIfPossible\'),\n        isContainerNarrow: \'&containerIsNarrow\',\n        isOwnedByCurrentUser: \'&activityIsOwnedByCurrentUser\',\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/components/summary_tile/\' +\n        \'collection_summary_tile_directive.html\'),\n      controller: [\n        \'$scope\', \'DateTimeFormatService\',\n        \'COLLECTION_VIEWER_URL\', \'COLLECTION_EDITOR_URL\', function(\n            $scope, DateTimeFormatService,\n            COLLECTION_VIEWER_URL, COLLECTION_EDITOR_URL) {\n          $scope.userIsLoggedIn = GLOBALS.userIsLoggedIn;\n          $scope.DEFAULT_EMPTY_TITLE = \'Untitled\';\n          $scope.ACTIVITY_TYPE_COLLECTION = constants.ACTIVITY_TYPE_COLLECTION;\n\n          $scope.getLastUpdatedDatetime = function() {\n            return DateTimeFormatService.getLocaleAbbreviatedDatetimeString(\n              $scope.getLastUpdatedMsec());\n          };\n\n          $scope.getCollectionLink = function() {\n            var targetUrl = (\n              $scope.isLinkedToEditorPage ?\n                COLLECTION_EDITOR_URL : COLLECTION_VIEWER_URL);\n            return UrlInterpolationService.interpolateUrl(\n              targetUrl, {\n                collection_id: $scope.getCollectionId()\n              }\n            );\n          };\n\n          $scope.getCompleteThumbnailIconUrl = function() {\n            return UrlInterpolationService.getStaticImageUrl(\n              $scope.getThumbnailIconUrl());\n          };\n\n          $scope.getStaticImageUrl = function(url) {\n            return UrlInterpolationService.getStaticImageUrl(url);\n          };\n\n          $scope.setHoverState = function(hoverState) {\n            $scope.collectionIsCurrentlyHoveredOver = hoverState;\n          };\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''