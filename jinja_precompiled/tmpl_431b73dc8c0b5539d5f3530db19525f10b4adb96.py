from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/story_editor/main_editor/story_node_editor_directive.html'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'<div class="node-field">\n  <label> Exploration ID </label>\n  <form class="form-horizontal" role="form" ng-submit="updateExplorationId(explorationId)">\n    <input type="text" ng-model="explorationId">\n    <button type="submit" class="btn btn-success btn-sm">Save</button>\n  </form>\n  <label style="padding-top: 2em;"> Node Outline </label>\n  <div style="float: right;">\n     Outline Finalized\n    <i ng-if="!isOutlineFinalized()" ng-click="finalizeOutline()" class="material-icons md-18">check_box_outline_blank</i>\n    <i ng-if="isOutlineFinalized()" ng-click="unfinalizeOutline()" class="material-icons md-18">check_box</i>\n  </div>\n  <div ng-if="!outlineEditorIsShown">\n    <angular-html-bind html-data="editableOutline">\n    </angular-html-bind>\n    <button type="button"\n            class="btn btn-default save-button"\n            ng-click="closePreviewOutline(editableOutline)">\n      Edit\n    </button>\n  </div>\n  <div ng-if="outlineEditorIsShown">\n    <schema-based-editor schema="OUTLINE_SCHEMA"\n                         local-value="editableOutline">\n    </schema-based-editor>\n    <button type="button"\n            class="btn btn-success save-button"\n            ng-if="isOutlineModified(editableOutline)"\n            ng-click="updateOutline(editableOutline)">\n      Save\n    </button>\n    <button type="button"\n            class="btn btn-default save-button"\n            ng-if="!isOutlineModified(editableOutline)"\n            ng-click="openPreviewOutline(editableOutline)">\n      Preview\n    </button>\n  </div>\n</div>\n<div class="node-field">\n  <label> Destination Nodes </label>\n  <md-card class="destination-node-id"\n           ng-repeat="nodeId in getDestinationNodeIds()"\n           ng-click="viewNodeEditor(nodeId)">\n    <[nodeId]>\n    <span style="float: right;" ng-click="removeDestinationNodeId(nodeId)" aria-hidden="true">\n      <i class="material-icons md-18">&#xE14C;</i>\n    </span>\n  </md-card>\n  <md-card class="destination-node-id" ng-if="!nodeIdEditorIsShown" ng-click="openNodeIdEditor()">\n    + Add existing node.\n  </md-card>\n  <md-card class="destination-node-id" ng-if="nodeIdEditorIsShown" ng-click="openNodeIdEditor()">\n    <input type="text" ng-model="newDestinationNodeId">\n    <button class="btn btn-success" ng-click="addExistingDestinationNode(newDestinationNodeId)">\n      Save\n    </button>\n    <button class="btn btn-default" ng-click="closeNodeIdEditor()">\n      Cancel\n    </button>\n  </md-card>\n  <md-card class="destination-node-id" ng-click="addNewDestinationNode()">\n    + Create a new destination node.\n  </md-card>\n</div>\n\n<style>\n  story-editor .node-field {\n    margin-top: 3%;\n    height: auto;\n  }\n  story-editor .node-field label {\n    margin-bottom: 3%;\n  }\n  story-editor .destination-node-id {\n    background-color: #efefef;\n  }\n  story-editor .destination-node-id:hover {\n    background-color: #e0e0e0;\n  }\n  story-editor .node-field .save-button {\n    margin-top: 1.5vh;\n  }\n</style>'

blocks = {}
debug_info = ''