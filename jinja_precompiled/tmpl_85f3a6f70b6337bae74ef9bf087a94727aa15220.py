from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/story_editor/StoryEditorNavbarDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the navbar of the story editor.\n */\n\noppia.directive(\'storyEditorNavbar\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/story_editor/story_editor_navbar_directive.html\'),\n      controller: [\n        \'$scope\', \'$rootScope\', \'$uibModal\', \'AlertsService\',\n        \'UndoRedoService\', \'StoryEditorStateService\', \'UrlService\',\n        \'EVENT_STORY_INITIALIZED\', \'EVENT_STORY_REINITIALIZED\',\n        \'EVENT_UNDO_REDO_SERVICE_CHANGE_APPLIED\',\n        function(\n            $scope, $rootScope, $uibModal, AlertsService,\n            UndoRedoService, StoryEditorStateService, UrlService,\n            EVENT_STORY_INITIALIZED, EVENT_STORY_REINITIALIZED,\n            EVENT_UNDO_REDO_SERVICE_CHANGE_APPLIED) {\n          var topicId = UrlService.getTopicIdFromUrl();\n          $scope.story = StoryEditorStateService.getStory();\n          $scope.isSaveInProgress = StoryEditorStateService.isSavingStory;\n          $scope.validationIssues = [];\n\n          $scope.getChangeListLength = function() {\n            return UndoRedoService.getChangeCount();\n          };\n\n          $scope.getWarningsCount = function() {\n            return $scope.validationIssues.length;\n          };\n\n          $scope.isStorySaveable = function() {\n            return (\n              $scope.getChangeListLength() > 0 &&\n              $scope.getWarningsCount() === 0);\n          };\n\n          $scope.discardChanges = function() {\n            UndoRedoService.clearChanges();\n            StoryEditorStateService.loadStory(topicId, $scope.story.getId());\n          };\n\n          var _validateStory = function() {\n            $scope.validationIssues = $scope.story.validate();\n          };\n\n          $scope.saveChanges = function() {\n            var modalInstance = $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/story_editor/story_editor_save_modal_directive.html\'),\n              backdrop: true,\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.save = function(commitMessage) {\n                    $uibModalInstance.close(commitMessage);\n                  };\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }\n              ]\n            });\n\n            modalInstance.result.then(function(commitMessage) {\n              StoryEditorStateService.saveStory(topicId, commitMessage);\n            });\n          };\n\n          $scope.$on(EVENT_STORY_INITIALIZED, _validateStory);\n          $scope.$on(EVENT_STORY_REINITIALIZED, _validateStory);\n          $scope.$on(\n            EVENT_UNDO_REDO_SERVICE_CHANGE_APPLIED, _validateStory);\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''