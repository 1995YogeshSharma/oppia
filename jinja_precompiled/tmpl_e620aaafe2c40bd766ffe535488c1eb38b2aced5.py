from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/topics_and_skills_dashboard/SkillsListDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for the skills list viewer.\n */\noppia.directive(\'skillsList\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      scope: {\n        getSkillSummaries: \'&skillSummaries\',\n        getEditableTopicSummaries: \'&editableTopicSummaries\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/topics_and_skills_dashboard/skills_list_directive.html\'),\n      controller: [\n        \'$scope\', \'$uibModal\', \'$rootScope\', \'EditableTopicBackendApiService\',\n        \'EVENT_TOPICS_AND_SKILLS_DASHBOARD_REINITIALIZED\',\n        function(\n            $scope, $uibModal, $rootScope, EditableTopicBackendApiService,\n            EVENT_TOPICS_AND_SKILLS_DASHBOARD_REINITIALIZED) {\n          $scope.SKILL_HEADINGS = [\n            \'description\', \'worked_examples_count\', \'misconception_count\'\n          ];\n          $scope.getSkillEditorUrl = function(skillId) {\n            return \'/skill_editor/\' + skillId;\n          };\n          $scope.assignSkillToTopic = function(skillId) {\n            var topicSummaries = $scope.getEditableTopicSummaries();\n            var modalInstance = $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                \'/pages/topics_and_skills_dashboard/\' +\n                \'assign_skill_to_topic_modal_directive.html\'),\n              backdrop: true,\n              controller: [\n                \'$scope\', \'$uibModalInstance\',\n                function($scope, $uibModalInstance) {\n                  $scope.topicSummaries = topicSummaries;\n                  $scope.selectedTopicIds = [];\n                  $scope.done = function() {\n                    $uibModalInstance.close($scope.selectedTopicIds);\n                  };\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss(\'cancel\');\n                  };\n                }\n              ]\n            });\n\n            modalInstance.result.then(function(topicIds) {\n              var changeList = [{\n                cmd: \'add_uncategorized_skill_id\',\n                new_uncategorized_skill_id: skillId,\n                change_affects_subtopic_page: false\n              }];\n              var topicSummaries = $scope.getEditableTopicSummaries();\n              for (var i = 0; i < topicIds.length; i++) {\n                var version = null;\n                for (var j = 0; j < topicSummaries.length; j++) {\n                  if (topicSummaries[j].id === topicIds[i]) {\n                    EditableTopicBackendApiService.updateTopic(\n                      topicIds[i], topicSummaries[j].version,\n                      \'Added skill with id \' + skillId + \' to topic.\',\n                      changeList\n                    ).then(function() {\n                      $rootScope.$broadcast(\n                        EVENT_TOPICS_AND_SKILLS_DASHBOARD_REINITIALIZED);\n                    });\n                  }\n                }\n              }\n            });\n          };\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''