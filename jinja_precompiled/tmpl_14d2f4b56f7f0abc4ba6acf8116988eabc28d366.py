from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/skill_editor/editor_tab/MisconceptionEditorDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the misconception editor.\n */\n\noppia.directive(\'misconceptionEditor\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      retrict: \'E\',\n      scope: {\n        misconception: \'=\',\n        getIndex: \'&index\',\n        isEditable: \'&isEditable\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/skill_editor/editor_tab/misconception_editor_directive.html\'),\n      controller: [\n        \'$scope\', \'SkillUpdateService\', \'SkillEditorStateService\',\n        function($scope, SkillUpdateService, SkillEditorStateService) {\n          $scope.skill = SkillEditorStateService.getSkill();\n\n          var nameMemento = null;\n          var notesMemento = null;\n          var feedbackMemento = null;\n\n          $scope.nameEditorIsOpen = false;\n          $scope.notesEditorIsOpen = false;\n          $scope.feedbackEditorIsOpen = false;\n\n          $scope.container = {\n            misconceptionName: $scope.misconception.getName(),\n            misconceptionNotes: $scope.misconception.getNotes(),\n            misconceptionFeedback: $scope.misconception.getFeedback()\n          };\n\n          $scope.NOTES_FORM_SCHEMA = {\n            type: \'html\',\n            ui_config: {}\n          };\n\n          $scope.FEEDBACK_FORM_SCHEMA = {\n            type: \'html\',\n            ui_config: {}\n          };\n\n          $scope.openNameEditor = function() {\n            if ($scope.isEditable()) {\n              nameMemento = angular.copy(\n                $scope.container.misconceptionName);\n              $scope.nameEditorIsOpen = true;\n            }\n          };\n\n          $scope.openNotesEditor = function() {\n            if ($scope.isEditable()) {\n              notesMemento = angular.copy(\n                $scope.container.misconceptionNotes);\n              $scope.notesEditorIsOpen = true;\n            }\n          };\n\n          $scope.openFeedbackEditor = function() {\n            if ($scope.isEditable()) {\n              feedbackMemento = angular.copy(\n                $scope.container.misconceptionFeedback);\n              $scope.feedbackEditorIsOpen = true;\n            }\n          };\n\n          $scope.saveName = function() {\n            $scope.nameEditorIsOpen = false;\n            var nameHasChanged = (\n              nameMemento !==\n              $scope.container.misconceptionName);\n\n            if (nameHasChanged) {\n              SkillUpdateService.updateMisconceptionName(\n                $scope.skill,\n                $scope.misconception.getId(),\n                nameMemento,\n                $scope.container.misconceptionName);\n              nameMemento = null;\n            }\n          };\n\n          $scope.saveNotes = function() {\n            $scope.notesEditorIsOpen = false;\n            var notesHasChanged = (\n              notesMemento !==\n              $scope.container.misconceptionNotes);\n\n            if (notesHasChanged) {\n              SkillUpdateService.updateMisconceptionNotes(\n                $scope.skill,\n                $scope.misconception.getId(),\n                notesMemento,\n                $scope.container.misconceptionNotes);\n              notesMemento = null;\n            }\n          };\n\n          $scope.saveFeedback = function() {\n            $scope.feedbackEditorIsOpen = false;\n            var feedbackHasChanged = (\n              feedbackMemento !==\n              $scope.container.misconceptionFeedback);\n\n            if (feedbackHasChanged) {\n              SkillUpdateService.updateMisconceptionFeedback(\n                $scope.skill,\n                $scope.misconception.getId(),\n                feedbackMemento,\n                $scope.container.misconceptionFeedback);\n              feedbackMemento = null;\n            }\n          };\n\n          $scope.cancelEditName = function() {\n            $scope.container.misconceptionName = nameMemento;\n            nameMemento = null;\n            $scope.nameEditorIsOpen = false;\n          };\n\n          $scope.cancelEditNotes = function() {\n            $scope.container.misconceptionNotes = notesMemento;\n            notesMemento = null;\n            $scope.notesEditorIsOpen = false;\n          };\n\n          $scope.cancelEditFeedback = function() {\n            $scope.container.misconceptionFeedback = feedbackMemento;\n            feedbackMemento = null;\n            $scope.feedbackEditorIsOpen = false;\n          };\n        }]\n    };\n  }\n]);'

blocks = {}
debug_info = ''