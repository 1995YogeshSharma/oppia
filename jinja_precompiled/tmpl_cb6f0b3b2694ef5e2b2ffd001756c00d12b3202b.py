from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_editor/editor_tab/StateSolution.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2017 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for solution.\n */\n\noppia.controller(\'StateSolution\', [\n  \'$scope\', \'$rootScope\', \'$uibModal\', \'$filter\', \'EditorStateService\',\n  \'AlertsService\', \'INTERACTION_SPECS\', \'stateSolutionService\',\n  \'ExplorationStatesService\', \'SolutionVerificationService\',\n  \'ExplorationHtmlFormatterService\', \'stateInteractionIdService\',\n  \'stateHintsService\', \'UrlInterpolationService\', \'SolutionObjectFactory\',\n  \'ExplorationContextService\', \'ExplorationWarningsService\',\n  \'INFO_MESSAGE_SOLUTION_IS_INVALID\',\n  function(\n      $scope, $rootScope, $uibModal, $filter, EditorStateService,\n      AlertsService, INTERACTION_SPECS, stateSolutionService,\n      ExplorationStatesService, SolutionVerificationService,\n      ExplorationHtmlFormatterService, stateInteractionIdService,\n      stateHintsService, UrlInterpolationService, SolutionObjectFactory,\n      ExplorationContextService, ExplorationWarningsService,\n      INFO_MESSAGE_SOLUTION_IS_INVALID) {\n    $scope.correctAnswer = null;\n    $scope.correctAnswerEditorHtml = \'\';\n    $scope.inlineSolutionEditorIsActive = false;\n    $scope.SOLUTION_EDITOR_FOCUS_LABEL = (\n      \'currentCorrectAnswerEditorHtmlForSolutionEditor\');\n    $scope.stateHintsService = stateHintsService;\n    $scope.stateInteractionIdService = stateInteractionIdService;\n    $scope.stateSolutionService = stateSolutionService;\n\n\n    ExplorationWarningsService.updateWarnings();\n\n    $scope.isSolutionValid = function() {\n      return ExplorationStatesService.isSolutionValid(\n        EditorStateService.getActiveStateName());\n    };\n\n    $scope.correctAnswerEditorHtml = (\n      ExplorationHtmlFormatterService.getInteractionHtml(\n        stateInteractionIdService.savedMemento,\n        ExplorationStatesService.getInteractionCustomizationArgsMemento(\n          EditorStateService.getActiveStateName()),\n        false,\n        $scope.SOLUTION_EDITOR_FOCUS_LABEL));\n\n    $scope.toggleInlineSolutionEditorIsActive = function() {\n      $scope.inlineSolutionEditorIsActive = (\n        !$scope.inlineSolutionEditorIsActive);\n    };\n\n    $scope.getSolutionSummary = function() {\n      var solution = stateSolutionService.savedMemento;\n      var solutionAsPlainText =\n        solution.getSummary(stateInteractionIdService.savedMemento);\n      solutionAsPlainText = $filter(\'convertToPlainText\')(solutionAsPlainText);\n      return solutionAsPlainText;\n    };\n\n    // This returns false if the current interaction ID is null.\n    $scope.isCurrentInteractionLinear = function() {\n      return (\n        stateInteractionIdService.savedMemento &&\n        INTERACTION_SPECS[stateInteractionIdService.savedMemento].is_linear);\n    };\n\n    $scope.openAddOrUpdateSolutionModal = function() {\n      AlertsService.clearWarnings();\n      $rootScope.$broadcast(\'externalSave\');\n      $scope.inlineSolutionEditorIsActive = false;\n\n      $uibModal.open({\n        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n          \'/pages/exploration_editor/editor_tab/\' +\n          \'add_or_update_solution_modal_directive.html\'),\n        backdrop: \'static\',\n        controller: [\n          \'$scope\', \'$uibModalInstance\', \'stateSolutionService\',\n          \'EVENT_PROGRESS_NAV_SUBMITTED\', \'INTERACTION_SPECS\',\n          function(\n              $scope, $uibModalInstance, stateSolutionService,\n              EVENT_PROGRESS_NAV_SUBMITTED, INTERACTION_SPECS) {\n            $scope.stateSolutionService = stateSolutionService;\n            $scope.correctAnswerEditorHtml = (\n              ExplorationHtmlFormatterService.getInteractionHtml(\n                stateInteractionIdService.savedMemento,\n                ExplorationStatesService.getInteractionCustomizationArgsMemento(\n                  EditorStateService.getActiveStateName()),\n                false,\n                $scope.SOLUTION_EDITOR_FOCUS_LABEL));\n            $scope.EXPLANATION_FORM_SCHEMA = {\n              type: \'html\',\n              ui_config: {}\n            };\n\n            $scope.answerIsValid = false;\n\n            var EMPTY_SOLUTION_DATA = {\n              answerIsExclusive: false,\n              correctAnswer: null,\n              explanationHtml: \'\'\n            };\n\n            $scope.data = stateSolutionService.savedMemento ? {\n              answerIsExclusive: (\n                stateSolutionService.savedMemento.answerIsExclusive),\n              correctAnswer: null,\n              explanationHtml: (\n                stateSolutionService.savedMemento.explanation.getHtml())\n            } : angular.copy(EMPTY_SOLUTION_DATA);\n\n            $scope.onSubmitFromSubmitButton = function() {\n              $scope.$broadcast(EVENT_PROGRESS_NAV_SUBMITTED);\n            };\n\n            $scope.submitAnswer = function(answer) {\n              $scope.data.correctAnswer = answer;\n            };\n\n            $scope.setInteractionAnswerValidity = function(answerValidity) {\n              $scope.answerIsValid = answerValidity;\n            };\n\n            $scope.shouldAdditionalSubmitButtonBeShown = function() {\n              var interactionSpecs = INTERACTION_SPECS[\n                stateInteractionIdService.savedMemento];\n              return interactionSpecs.show_generic_submit_button;\n            };\n\n            $scope.saveSolution = function() {\n              if (typeof $scope.data.answerIsExclusive === \'boolean\' &&\n                  $scope.data.correctAnswer !== null &&\n                  $scope.data.explanation !== \'\') {\n                $uibModalInstance.close({\n                  solution: SolutionObjectFactory.createNew(\n                    $scope.data.answerIsExclusive,\n                    $scope.data.correctAnswer,\n                    $scope.data.explanationHtml)\n                });\n              } else {\n                throw Error(\'Cannot save invalid solution\');\n              }\n            };\n\n            $scope.cancel = function() {\n              $uibModalInstance.dismiss(\'cancel\');\n              AlertsService.clearWarnings();\n            };\n          }\n        ]\n      }).result.then(function(result) {\n        var correctAnswer = result.solution.correctAnswer;\n        var currentStateName = EditorStateService.getActiveStateName();\n        var state = ExplorationStatesService.getState(currentStateName);\n        var solutionIsValid = SolutionVerificationService.verifySolution(\n          ExplorationContextService.getExplorationId(), state, correctAnswer);\n\n        ExplorationStatesService.updateSolutionValidity(\n          currentStateName, solutionIsValid);\n        ExplorationWarningsService.updateWarnings();\n        if (!solutionIsValid) {\n          AlertsService.addInfoMessage(INFO_MESSAGE_SOLUTION_IS_INVALID, 4000);\n        }\n\n        stateSolutionService.displayed = result.solution;\n        stateSolutionService.saveDisplayedValue();\n      });\n    };\n\n    $scope.deleteSolution = function(index, evt) {\n      evt.stopPropagation();\n\n      AlertsService.clearWarnings();\n      $uibModal.open({\n        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n          \'/pages/exploration_editor/editor_tab/\' +\n          \'delete_solution_modal_directive.html\'),\n        backdrop: true,\n        controller: [\n          \'$scope\', \'$uibModalInstance\',\n          function($scope, $uibModalInstance) {\n            $scope.reallyDelete = function() {\n              $uibModalInstance.close();\n            };\n\n            $scope.cancel = function() {\n              $uibModalInstance.dismiss(\'cancel\');\n              AlertsService.clearWarnings();\n            };\n          }\n        ]\n      }).result.then(function() {\n        stateSolutionService.displayed = null;\n        stateSolutionService.saveDisplayedValue();\n        ExplorationStatesService.deleteSolutionValidity(\n          EditorStateService.getActiveStateName());\n      });\n    };\n  }\n]);'

blocks = {}
debug_info = ''