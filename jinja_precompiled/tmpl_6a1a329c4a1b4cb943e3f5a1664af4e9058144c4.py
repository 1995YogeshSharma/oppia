from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/exploration_player/RefresherExplorationConfirmationModalService.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2017 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Service for managing the redirection to a refresher\n * exploration.\n */\n\noppia.factory(\'RefresherExplorationConfirmationModalService\', [\n  \'$uibModal\', \'UrlInterpolationService\', \'UrlService\',\n  \'ExplorationEngineService\',\n  function($uibModal, UrlInterpolationService, UrlService,\n      ExplorationEngineService) {\n    return {\n      displayRedirectConfirmationModal: function(\n          refresherExplorationId, redirectConfirmationCallback) {\n        $uibModal.open({\n          templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n            \'/pages/exploration_player/\' +\n            \'refresher_exploration_confirmation_modal_directive.html\'),\n          backdrop: \'static\',\n          controller: [\n            \'$scope\', \'$uibModalInstance\', \'$window\', \'$timeout\',\n            function($scope, $uibModalInstance, $window, $timeout) {\n              $scope.confirmRedirect = function() {\n                redirectConfirmationCallback();\n\n                var collectionId = UrlService.getUrlParams().collection_id;\n                var parentIdList = UrlService.getQueryFieldValuesAsList(\n                  \'parent\');\n                var EXPLORATION_URL_TEMPLATE = \'/explore/<exploration_id>\';\n                var url = UrlInterpolationService.interpolateUrl(\n                  EXPLORATION_URL_TEMPLATE, {\n                    exploration_id: refresherExplorationId\n                  });\n                if (collectionId) {\n                  url = UrlService.addField(url, \'collection_id\', collectionId);\n                }\n                for (var i = 0; i < parentIdList.length; i++) {\n                  url = UrlService.addField(url, \'parent\', parentIdList[i]);\n                }\n                url = UrlService.addField(\n                  url, \'parent\', ExplorationEngineService.getExplorationId());\n\n                // Wait a little before redirecting the page to ensure other\n                // tasks started here (e.g. event recording) have sufficient\n                // time to complete.\n                // TODO(bhenning): Find a reliable way to send events that does\n                // not get interrupted with browser redirection.\n                $timeout(function() {\n                  $window.open(url, \'_self\');\n                }, 150);\n\n                // Close the dialog to ensure the confirmation cannot be called\n                // multiple times.\n                $uibModalInstance.close();\n              };\n              $scope.cancelRedirect = function() {\n                $uibModalInstance.dismiss(\'cancel\');\n              };\n            }\n          ]\n        });\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''