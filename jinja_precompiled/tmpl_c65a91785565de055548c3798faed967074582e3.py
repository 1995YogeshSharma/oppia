from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'services/AutogeneratedAudioPlayerService.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2017 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Service to operate the playback of autogenerated audio\n * using the SpeechSynthesis API.\n */\n\noppia.factory(\'AutogeneratedAudioPlayerService\', [\n  \'SpeechSynthesisChunkerService\',\n  function(SpeechSynthesisChunkerService) {\n    var DEFAULT_PLAYBACK_RATE = 0.92;\n\n    // Not all browsers support SpeechSynthesisUtterance, so we need the\n    // check to prevent a "SpeechSynthesisUtterance is not defined" error.\n    var _speechSynthesis = null;\n    var utterance = null;\n    if (window.hasOwnProperty(\'speechSynthesis\')) {\n      _speechSynthesis = window.speechSynthesis;\n      utterance = new SpeechSynthesisUtterance();\n    }\n\n    var _play = function(html, language, audioFinishedCallback) {\n      SpeechSynthesisChunkerService.cancel();\n      message = SpeechSynthesisChunkerService.convertToSpeakableText(html);\n      utterance.text = message;\n      utterance.lang = language;\n      utterance.rate = DEFAULT_PLAYBACK_RATE;\n      SpeechSynthesisChunkerService.speak(\n        utterance,\n        function() {\n          audioFinishedCallback();\n        }\n      );\n    };\n\n    return {\n      play: function(html, language, audioFinishedCallback) {\n        return _play(html, language, audioFinishedCallback);\n      },\n      cancel: function() {\n        SpeechSynthesisChunkerService.cancel();\n      },\n      isPlaying: function() {\n        return _speechSynthesis && _speechSynthesis.speaking;\n      }\n    };\n  }\n]);'

blocks = {}
debug_info = ''