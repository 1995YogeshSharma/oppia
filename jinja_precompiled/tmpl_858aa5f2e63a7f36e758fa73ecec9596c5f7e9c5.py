from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'pages/collection_editor/settings_tab/CollectionDetailsEditorDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2016 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for displaying and editing a collection details.\n * Edit options include: changing the title, objective, and category, and also\n * adding a new exploration.\n */\n\noppia.directive(\'collectionDetailsEditor\', [\n  \'UrlInterpolationService\', function(UrlInterpolationService) {\n    return {\n      restrict: \'E\',\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/pages/collection_editor/settings_tab/\' +\n        \'collection_details_editor_directive.html\'),\n      controller: [\n        \'$scope\', \'CollectionEditorStateService\', \'CollectionUpdateService\',\n        \'CollectionValidationService\', \'AlertsService\', \'ALL_CATEGORIES\',\n        \'EVENT_COLLECTION_INITIALIZED\', \'EVENT_COLLECTION_REINITIALIZED\',\n        \'COLLECTION_TITLE_INPUT_FOCUS_LABEL\',\n        function(\n            $scope, CollectionEditorStateService, CollectionUpdateService,\n            CollectionValidationService, AlertsService, ALL_CATEGORIES,\n            EVENT_COLLECTION_INITIALIZED, EVENT_COLLECTION_REINITIALIZED,\n            COLLECTION_TITLE_INPUT_FOCUS_LABEL) {\n          $scope.collection = CollectionEditorStateService.getCollection();\n          $scope.COLLECTION_TITLE_INPUT_FOCUS_LABEL = (\n            COLLECTION_TITLE_INPUT_FOCUS_LABEL);\n          $scope.hasPageLoaded = (\n            CollectionEditorStateService.hasLoadedCollection);\n          $scope.CATEGORY_LIST_FOR_SELECT2 = ALL_CATEGORIES.map(\n            function(category) {\n              return {\n                id: category,\n                text: category\n              };\n            }\n          );\n\n          // TODO(sll): Remove the filter once the App Engine search API\n          // supports 3-letter language codes.\n          $scope.languageListForSelect = (\n            constants.ALL_LANGUAGE_CODES.filter(function(languageCodeDict) {\n              return languageCodeDict.code.length === 2;\n            })\n          );\n\n          $scope.TAG_REGEX = GLOBALS.TAG_REGEX;\n\n          var refreshSettingsTab = function() {\n            $scope.displayedCollectionTitle = $scope.collection.getTitle();\n            $scope.displayedCollectionObjective = (\n              $scope.collection.getObjective());\n            $scope.displayedCollectionCategory = (\n              $scope.collection.getCategory());\n            $scope.displayedCollectionLanguage = (\n              $scope.collection.getLanguageCode());\n            $scope.displayedCollectionTags = (\n              $scope.collection.getTags());\n\n            var categoryIsInSelect2 = $scope.CATEGORY_LIST_FOR_SELECT2.some(\n              function(categoryItem) {\n                return categoryItem.id === $scope.collection.getCategory();\n              }\n            );\n\n            // If the current category is not in the dropdown, add it\n            // as the first option.\n            if (!categoryIsInSelect2 && $scope.collection.getCategory()) {\n              $scope.CATEGORY_LIST_FOR_SELECT2.unshift({\n                id: $scope.collection.getCategory(),\n                text: $scope.collection.getCategory()\n              });\n            }\n          };\n\n          $scope.$on(EVENT_COLLECTION_INITIALIZED, refreshSettingsTab);\n          $scope.$on(EVENT_COLLECTION_REINITIALIZED, refreshSettingsTab);\n\n          $scope.updateCollectionTitle = function() {\n            CollectionUpdateService.setCollectionTitle(\n              $scope.collection, $scope.displayedCollectionTitle);\n          };\n\n          $scope.updateCollectionObjective = function() {\n            CollectionUpdateService.setCollectionObjective(\n              $scope.collection, $scope.displayedCollectionObjective);\n          };\n\n          $scope.updateCollectionCategory = function() {\n            CollectionUpdateService.setCollectionCategory(\n              $scope.collection, $scope.displayedCollectionCategory);\n          };\n\n          $scope.updateCollectionLanguageCode = function() {\n            CollectionUpdateService.setCollectionLanguageCode(\n              $scope.collection, $scope.displayedCollectionLanguage);\n          };\n\n          // Normalize the tags for the collection\n          var normalizeTags = function(tags) {\n            for (var i = 0; i < tags.length; i++) {\n              tags[i] = tags[i].trim().replace(/\\s+/g, \' \');\n            }\n            return tags;\n          };\n\n          $scope.updateCollectionTags = function() {\n            $scope.displayedCollectionTags = normalizeTags(\n              $scope.displayedCollectionTags);\n            if (!CollectionValidationService.isTagValid(\n              $scope.displayedCollectionTags)) {\n              AlertsService.addWarning(\n                \'Please ensure that there are no duplicate tags and that all \' +\n                \'tags contain only lower case and spaces.\');\n              return;\n            }\n            CollectionUpdateService.setCollectionTags(\n              $scope.collection, $scope.displayedCollectionTags);\n          };\n        }\n      ]\n    };\n  }]);'

blocks = {}
debug_info = ''