from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/profile_link/ProfileLinkImageDirective.js'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS-IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for creating image links to a user\'s profile page.\n */\n\noppia.directive(\'profileLinkImage\', [\n  \'UrlInterpolationService\', \'SYSTEM_USER_IDS\',\n  function(UrlInterpolationService, SYSTEM_USER_IDS) {\n    return {\n      restrict: \'E\',\n      scope: {\n        username: \'&\'\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        \'/components/profile_link/\' +\n        \'profile_link_image_directive.html\'),\n      controller: [\n        \'$scope\', \'$http\',\n        function($scope, $http) {\n          var DEFAULT_PROFILE_IMAGE_PATH = (\n            UrlInterpolationService.getStaticImageUrl(\n              \'/avatar/user_blue_72px.png\'));\n\n          $scope.isUsernameLinkable = function(username) {\n            return SYSTEM_USER_IDS.indexOf(username) === -1;\n          };\n\n          $scope.profileImageUrl = (\n            \'/preferenceshandler/profile_picture_by_username/\' +\n            $scope.username());\n          $scope.profilePicture = DEFAULT_PROFILE_IMAGE_PATH;\n\n          // Returns a promise for the user profile picture, or the default\n          // image if user is not logged in or has not uploaded a profile\n          // picture, or the player is in preview mode.\n          $http.get($scope.profileImageUrl).then(function(response) {\n            $scope.profilePicture = (\n              response.data.profile_picture_data_url_for_username ||\n              DEFAULT_PROFILE_IMAGE_PATH);\n          });\n        }]\n    };\n  }]);'

blocks = {}
debug_info = ''