from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound, Namespace
name = 'components/forms/schema_editors/schema_based_editor_directive.html'

def root(context, missing=missing):
    resolve = context.resolve_or_missing
    undefined = environment.undefined
    if 0: yield None
    pass
    yield u'<schema-based-choices-editor ng-if="schema().choices" local-value="$parent.localValue"\n                             schema="schema()" choices="schema().choices"\n                             is-disabled="isDisabled()">\n</schema-based-choices-editor>\n\n<schema-based-bool-editor ng-if="schema().type === \'bool\' && !schema().choices"\n                          local-value="$parent.localValue" is-disabled="isDisabled()"\n                          label-for-focus-target="labelForFocusTarget()">\n</schema-based-bool-editor>\n\n<schema-based-int-editor ng-if="schema().type === \'int\' && !schema().choices"\n                         local-value="$parent.localValue" is-disabled="isDisabled()"\n                         validators="schema().validators"\n                         label-for-focus-target="labelForFocusTarget()"\n                         on-input-blur="onInputBlur"\n                         on-input-focus="onInputFocus">\n</schema-based-int-editor>\n\n<schema-based-float-editor ng-if="schema().type === \'float\' && !schema().choices"\n                           local-value="$parent.localValue" is-disabled="isDisabled()"\n                           validators="schema().validators"\n                           label-for-focus-target="labelForFocusTarget()"\n                           on-input-blur="onInputBlur"\n                           on-input-focus="onInputFocus">\n</schema-based-float-editor>\n\n<schema-based-unicode-editor ng-if="schema().type === \'unicode\' && !schema().choices"\n                             local-value="$parent.localValue" is-disabled="isDisabled()"\n                             validators="schema().validators" ui-config="schema().ui_config"\n                             label-for-focus-target="labelForFocusTarget()"\n                             on-input-blur="onInputBlur"\n                             on-input-focus="onInputFocus">\n</schema-based-unicode-editor>\n\n<schema-based-html-editor ng-if="schema().type === \'html\' && !schema().choices"\n                          local-value="$parent.localValue" is-disabled="isDisabled()"\n                          label-for-focus-target="labelForFocusTarget()"\n                          ui-config="schema().ui_config">\n</schema-based-html-editor>\n\n<schema-based-list-editor ng-if="schema().type === \'list\' && !schema().choices"\n                          local-value="$parent.localValue" is-disabled="isDisabled()"\n                          item-schema="schema().items" len="schema().len"\n                          ui-config="schema().ui_config" validators="schema().validators"\n                          label-for-focus-target="labelForFocusTarget()">\n</schema-based-list-editor>\n\n<schema-based-dict-editor ng-if="schema().type === \'dict\' && !schema().choices"\n                          local-value="$parent.localValue" is-disabled="isDisabled()"\n                          property-schemas="schema().properties"\n                          label-for-focus-target="labelForFocusTarget()">\n</schema-based-dict-editor>\n\n<schema-based-custom-editor ng-if="schema().type === \'custom\' && !schema().choices"\n                            obj-type="schema().obj_type" local-value="$parent.localValue"\n                            is-disabled="isDisabled()">\n</schema-based-custom-editor>'

blocks = {}
debug_info = ''